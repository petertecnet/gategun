{"ast":null,"code":"import { CollapseTransition } from 'vue2-transitions';\nexport default {\n  name: 'sidebar-item',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    menu: {\n      type: Boolean,\n      default: false,\n      description: \"Whether the item is a menu. Most of the item it's not used and should be used only if you want to override the default behavior.\"\n    },\n    link: {\n      type: Object,\n      default: () => {\n        return {\n          name: '',\n          path: '',\n          children: []\n        };\n      },\n      description: 'Sidebar link. Can contain name, path, icon and other attributes. See examples for more info'\n    }\n  },\n  provide() {\n    return {\n      addLink: this.addChild,\n      removeLink: this.removeChild\n    };\n  },\n  inject: {\n    addLink: {\n      default: null\n    },\n    removeLink: {\n      default: null\n    },\n    autoClose: {\n      default: true\n    }\n  },\n  data() {\n    return {\n      children: [],\n      collapsed: true\n    };\n  },\n  computed: {\n    baseComponent() {\n      return this.isMenu || this.link.isRoute ? 'li' : 'router-link';\n    },\n    linkPrefix() {\n      if (this.link.name) {\n        let words = this.link.name.split(' ');\n        return words.map(word => word.substring(0, 1)).join('');\n      }\n    },\n    isMenu() {\n      return this.children.length > 0 || this.menu === true;\n    },\n    isActive() {\n      if (this.$route && this.$route.path) {\n        let matchingRoute = this.children.find(c => this.$route.path.startsWith(c.link.path));\n        if (matchingRoute !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  methods: {\n    addChild(item) {\n      const index = this.$slots.default.indexOf(item.$vnode);\n      this.children.splice(index, 0, item);\n    },\n    removeChild(item) {\n      const tabs = this.children;\n      const index = tabs.indexOf(item);\n      tabs.splice(index, 1);\n    },\n    elementType(link, isParent = true) {\n      if (link.isRoute === false) {\n        return isParent ? 'li' : 'a';\n      } else {\n        return 'router-link';\n      }\n    },\n    linkAbbreviation(name) {\n      const matches = name.match(/\\b(\\w)/g);\n      return matches.join('');\n    },\n    linkClick() {\n      if (this.autoClose && this.$sidebar && this.$sidebar.showSidebar === true) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n    collapseMenu() {\n      this.collapsed = !this.collapsed;\n    },\n    collapseSubMenu(link) {\n      link.collapsed = !link.collapsed;\n    }\n  },\n  mounted() {\n    if (this.addLink) {\n      this.addLink(this);\n    }\n    if (this.link.collapsed !== undefined) {\n      this.collapsed = this.link.collapsed;\n    }\n    if (this.isActive && this.isMenu) {\n      this.collapsed = false;\n    }\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n    if (this.removeLink) {\n      this.removeLink(this);\n    }\n  }\n};","map":{"version":3,"names":["CollapseTransition","name","components","props","menu","type","Boolean","default","description","link","Object","path","children","provide","addLink","addChild","removeLink","removeChild","inject","autoClose","data","collapsed","computed","baseComponent","isMenu","isRoute","linkPrefix","words","split","map","word","substring","join","length","isActive","$route","matchingRoute","find","c","startsWith","undefined","methods","item","index","$slots","indexOf","$vnode","splice","tabs","elementType","isParent","linkAbbreviation","matches","match","linkClick","$sidebar","showSidebar","displaySidebar","collapseMenu","collapseSubMenu","mounted","destroyed","$el","parentNode"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\SidebarPlugin\\SidebarItem.vue"],"sourcesContent":["<template>\n  <b-nav-item\n    :is=\"baseComponent\"\n    :to=\"link.path ? link.path : '/'\"\n    class=\"nav-item\"\n    :class=\"{ active: isActive }\"\n  >\n    <a\n      v-if=\"isMenu\"\n      class=\"sidebar-menu-item nav-link\"\n      :class=\"{ active: isActive }\"\n      :aria-expanded=\"!collapsed\"\n      data-toggle=\"collapse\"\n      @click.prevent=\"collapseMenu\"\n    >\n      <template v-if=\"addLink\">\n        <span class=\"nav-link-text\">\n          {{ link.name }} <b class=\"caret\"></b>\n        </span>\n      </template>\n      <template v-else>\n        <i :class=\"link.icon\"></i>\n        <span class=\"nav-link-text\">{{ link.name }} <b class=\"caret\"></b></span>\n      </template>\n    </a>\n\n    <collapse-transition>\n      <div\n        v-if=\"$slots.default || this.isMenu\"\n        v-show=\"!collapsed\"\n        class=\"collapse show\"\n      >\n        <ul class=\"nav nav-sm flex-column\">\n          <slot></slot>\n        </ul>\n      </div>\n    </collapse-transition>\n\n    <slot\n      name=\"title\"\n      v-if=\"children.length === 0 && !$slots.default && link.path\"\n    >\n      <component\n        :to=\"link.path\"\n        @click.native=\"linkClick\"\n        :is=\"elementType(link, false)\"\n        class=\"nav-link\"\n        :class=\"{ active: link.active }\"\n        :target=\"link.target\"\n        :href=\"link.path\"\n      >\n        <template v-if=\"addLink\">\n          <span class=\"nav-link-text\">{{ link.name }}</span>\n        </template>\n        <template v-else>\n          <i :class=\"link.icon\"></i>\n          <span class=\"nav-link-text\">{{ link.name }}</span>\n        </template>\n      </component>\n    </slot>\n  </b-nav-item>\n</template>\n<script>\nimport { CollapseTransition } from 'vue2-transitions';\n\nexport default {\n  name: 'sidebar-item',\n  components: {\n    CollapseTransition\n  },\n  props: {\n    menu: {\n      type: Boolean,\n      default: false,\n      description:\n        \"Whether the item is a menu. Most of the item it's not used and should be used only if you want to override the default behavior.\"\n    },\n    link: {\n      type: Object,\n      default: () => {\n        return {\n          name: '',\n          path: '',\n          children: []\n        };\n      },\n      description:\n        'Sidebar link. Can contain name, path, icon and other attributes. See examples for more info'\n    }\n  },\n  provide() {\n    return {\n      addLink: this.addChild,\n      removeLink: this.removeChild\n    };\n  },\n  inject: {\n    addLink: { default: null },\n    removeLink: { default: null },\n    autoClose: {\n      default: true\n    }\n  },\n  data() {\n    return {\n      children: [],\n      collapsed: true\n    };\n  },\n  computed: {\n    baseComponent() {\n      return this.isMenu || this.link.isRoute ? 'li' : 'router-link';\n    },\n    linkPrefix() {\n      if (this.link.name) {\n        let words = this.link.name.split(' ');\n        return words.map(word => word.substring(0, 1)).join('');\n      }\n    },\n    isMenu() {\n      return this.children.length > 0 || this.menu === true;\n    },\n    isActive() {\n      if (this.$route && this.$route.path) {\n        let matchingRoute = this.children.find(c =>\n          this.$route.path.startsWith(c.link.path)\n        );\n        if (matchingRoute !== undefined) {\n          return true;\n        }\n      }\n      return false;\n    }\n  },\n  methods: {\n    addChild(item) {\n      const index = this.$slots.default.indexOf(item.$vnode);\n      this.children.splice(index, 0, item);\n    },\n    removeChild(item) {\n      const tabs = this.children;\n      const index = tabs.indexOf(item);\n      tabs.splice(index, 1);\n    },\n    elementType(link, isParent = true) {\n      if (link.isRoute === false) {\n        return isParent ? 'li' : 'a';\n      } else {\n        return 'router-link';\n      }\n    },\n    linkAbbreviation(name) {\n      const matches = name.match(/\\b(\\w)/g);\n      return matches.join('');\n    },\n    linkClick() {\n      if (\n        this.autoClose &&\n        this.$sidebar &&\n        this.$sidebar.showSidebar === true\n      ) {\n        this.$sidebar.displaySidebar(false);\n      }\n    },\n    collapseMenu() {\n      this.collapsed = !this.collapsed;\n    },\n    collapseSubMenu(link) {\n      link.collapsed = !link.collapsed;\n    }\n  },\n  mounted() {\n    if (this.addLink) {\n      this.addLink(this);\n    }\n    if (this.link.collapsed !== undefined) {\n      this.collapsed = this.link.collapsed;\n    }\n    if (this.isActive && this.isMenu) {\n      this.collapsed = false;\n    }\n  },\n  destroyed() {\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n    if (this.removeLink) {\n      this.removeLink(this);\n    }\n  }\n};\n</script>\n<style>\n.sidebar-menu-item {\n  cursor: pointer;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}