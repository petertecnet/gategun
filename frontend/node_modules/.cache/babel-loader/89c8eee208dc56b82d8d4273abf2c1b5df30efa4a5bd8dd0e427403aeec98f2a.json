{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Notifications from './Notifications.vue';\nconst NotificationStore = {\n  state: [],\n  // here the notifications will be added\n  settings: {\n    overlap: false,\n    verticalAlign: 'top',\n    horizontalAlign: 'right',\n    type: 'info',\n    timeout: 5000,\n    closeOnClick: true,\n    showClose: true\n  },\n  setOptions(options) {\n    this.settings = Object.assign(this.settings, options);\n  },\n  removeNotification(timestamp) {\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification(notification) {\n    if (typeof notification === 'string' || notification instanceof String) {\n      notification = {\n        message: notification\n      };\n    }\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(notification.timestamp.getMilliseconds() + this.state.length);\n    notification = Object.assign({}, this.settings, notification);\n    this.state.push(notification);\n  },\n  notify(notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach(notificationInstance => {\n        this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n};\nconst NotificationsPlugin = {\n  install(Vue, options) {\n    let app = new Vue({\n      data: {\n        notificationStore: NotificationStore\n      },\n      methods: {\n        notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n      }\n    });\n    Vue.prototype.$notify = app.notify;\n    Vue.prototype.$notifications = app.notificationStore;\n    Vue.component('Notifications', Notifications);\n    if (options) {\n      NotificationStore.setOptions(options);\n    }\n  }\n};\nexport default NotificationsPlugin;","map":{"version":3,"names":["Notifications","NotificationStore","state","settings","overlap","verticalAlign","horizontalAlign","type","timeout","closeOnClick","showClose","setOptions","options","Object","assign","removeNotification","timestamp","indexToDelete","findIndex","n","splice","addNotification","notification","String","message","Date","setMilliseconds","getMilliseconds","length","push","notify","Array","isArray","forEach","notificationInstance","NotificationsPlugin","install","Vue","app","data","notificationStore","methods","prototype","$notify","$notifications","component"],"sources":["C:/xampp/htdocs/gategun/frontend/src/components/NotificationPlugin/index.js"],"sourcesContent":["import Notifications from './Notifications.vue';\n\nconst NotificationStore = {\n  state: [], // here the notifications will be added\n  settings: {\n    overlap: false,\n    verticalAlign: 'top',\n    horizontalAlign: 'right',\n    type: 'info',\n    timeout: 5000,\n    closeOnClick: true,\n    showClose: true\n  },\n  setOptions(options) {\n    this.settings = Object.assign(this.settings, options);\n  },\n  removeNotification(timestamp) {\n    const indexToDelete = this.state.findIndex(n => n.timestamp === timestamp);\n    if (indexToDelete !== -1) {\n      this.state.splice(indexToDelete, 1);\n    }\n  },\n  addNotification(notification) {\n    if (typeof notification === 'string' || notification instanceof String) {\n      notification = { message: notification };\n    }\n    notification.timestamp = new Date();\n    notification.timestamp.setMilliseconds(\n      notification.timestamp.getMilliseconds() + this.state.length\n    );\n    notification = Object.assign({}, this.settings, notification);\n    this.state.push(notification);\n  },\n  notify(notification) {\n    if (Array.isArray(notification)) {\n      notification.forEach(notificationInstance => {\n        this.addNotification(notificationInstance);\n      });\n    } else {\n      this.addNotification(notification);\n    }\n  }\n};\n\nconst NotificationsPlugin = {\n  install(Vue, options) {\n    let app = new Vue({\n      data: {\n        notificationStore: NotificationStore\n      },\n      methods: {\n        notify(notification) {\n          this.notificationStore.notify(notification);\n        }\n      }\n    });\n    Vue.prototype.$notify = app.notify;\n    Vue.prototype.$notifications = app.notificationStore;\n    Vue.component('Notifications', Notifications);\n    if (options) {\n      NotificationStore.setOptions(options);\n    }\n  }\n};\n\nexport default NotificationsPlugin;\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,qBAAqB;AAE/C,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,EAAE;EAAE;EACXC,QAAQ,EAAE;IACRC,OAAO,EAAE,KAAK;IACdC,aAAa,EAAE,KAAK;IACpBC,eAAe,EAAE,OAAO;IACxBC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,IAAI;IACbC,YAAY,EAAE,IAAI;IAClBC,SAAS,EAAE;EACb,CAAC;EACDC,UAAUA,CAACC,OAAO,EAAE;IAClB,IAAI,CAACT,QAAQ,GAAGU,MAAM,CAACC,MAAM,CAAC,IAAI,CAACX,QAAQ,EAAES,OAAO,CAAC;EACvD,CAAC;EACDG,kBAAkBA,CAACC,SAAS,EAAE;IAC5B,MAAMC,aAAa,GAAG,IAAI,CAACf,KAAK,CAACgB,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACH,SAAS,KAAKA,SAAS,CAAC;IAC1E,IAAIC,aAAa,KAAK,CAAC,CAAC,EAAE;MACxB,IAAI,CAACf,KAAK,CAACkB,MAAM,CAACH,aAAa,EAAE,CAAC,CAAC;IACrC;EACF,CAAC;EACDI,eAAeA,CAACC,YAAY,EAAE;IAC5B,IAAI,OAAOA,YAAY,KAAK,QAAQ,IAAIA,YAAY,YAAYC,MAAM,EAAE;MACtED,YAAY,GAAG;QAAEE,OAAO,EAAEF;MAAa,CAAC;IAC1C;IACAA,YAAY,CAACN,SAAS,GAAG,IAAIS,IAAI,CAAC,CAAC;IACnCH,YAAY,CAACN,SAAS,CAACU,eAAe,CACpCJ,YAAY,CAACN,SAAS,CAACW,eAAe,CAAC,CAAC,GAAG,IAAI,CAACzB,KAAK,CAAC0B,MACxD,CAAC;IACDN,YAAY,GAAGT,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACX,QAAQ,EAAEmB,YAAY,CAAC;IAC7D,IAAI,CAACpB,KAAK,CAAC2B,IAAI,CAACP,YAAY,CAAC;EAC/B,CAAC;EACDQ,MAAMA,CAACR,YAAY,EAAE;IACnB,IAAIS,KAAK,CAACC,OAAO,CAACV,YAAY,CAAC,EAAE;MAC/BA,YAAY,CAACW,OAAO,CAACC,oBAAoB,IAAI;QAC3C,IAAI,CAACb,eAAe,CAACa,oBAAoB,CAAC;MAC5C,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACb,eAAe,CAACC,YAAY,CAAC;IACpC;EACF;AACF,CAAC;AAED,MAAMa,mBAAmB,GAAG;EAC1BC,OAAOA,CAACC,GAAG,EAAEzB,OAAO,EAAE;IACpB,IAAI0B,GAAG,GAAG,IAAID,GAAG,CAAC;MAChBE,IAAI,EAAE;QACJC,iBAAiB,EAAEvC;MACrB,CAAC;MACDwC,OAAO,EAAE;QACPX,MAAMA,CAACR,YAAY,EAAE;UACnB,IAAI,CAACkB,iBAAiB,CAACV,MAAM,CAACR,YAAY,CAAC;QAC7C;MACF;IACF,CAAC,CAAC;IACFe,GAAG,CAACK,SAAS,CAACC,OAAO,GAAGL,GAAG,CAACR,MAAM;IAClCO,GAAG,CAACK,SAAS,CAACE,cAAc,GAAGN,GAAG,CAACE,iBAAiB;IACpDH,GAAG,CAACQ,SAAS,CAAC,eAAe,EAAE7C,aAAa,CAAC;IAC7C,IAAIY,OAAO,EAAE;MACXX,iBAAiB,CAACU,UAAU,CAACC,OAAO,CAAC;IACvC;EACF;AACF,CAAC;AAED,eAAeuB,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}