{"ast":null,"code":"import noUiSlider from 'nouislider';\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description: '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false],\n      description: '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description: '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n      description: '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on('slide', () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (oldValue.length === newValue.length && oldValue.every((v, i) => v === newValue[i])) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["noUiSlider","name","props","value","type","String","Array","Number","description","disabled","Boolean","default","start","connect","range","Object","min","max","options","data","slider","methods","createSlider","create","$el","isArray","on","get","$emit","mounted","watch","newValue","oldValue","sliderValue","length","every","v","i","set"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseSlider.vue"],"sourcesContent":["<template>\n  <div class=\"slider\" :disabled=\"disabled\"></div>\n</template>\n<script>\nimport noUiSlider from 'nouislider';\n\nexport default {\n  name: 'base-slider',\n  props: {\n    value: {\n      type: [String, Array, Number],\n      description: 'slider value'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'whether the slider is disabled'\n    },\n    start: {\n      type: [Number, Array],\n      default: 0,\n      description:\n        '[noUi Slider start](https://refreshless.com/nouislider/slider-options/#section-start)'\n    },\n    connect: {\n      type: [Boolean, Array],\n      default: () => [true, false],\n      description:\n        '[noUi Slider connect](https://refreshless.com/nouislider/slider-options/#section-connect)'\n    },\n    range: {\n      type: Object,\n      default: () => {\n        return {\n          min: 0,\n          max: 100\n        };\n      },\n      description:\n        '[noUi Slider range](https://refreshless.com/nouislider/slider-values/#section-range)'\n    },\n    options: {\n      type: Object,\n      default: () => {\n        return {};\n      },\n      description:\n        '[noUi Slider options](https://refreshless.com/nouislider/slider-options/)'\n    }\n  },\n  data() {\n    return {\n      slider: null\n    };\n  },\n  methods: {\n    createSlider() {\n      noUiSlider.create(this.$el, {\n        start: this.value || this.start,\n        connect: Array.isArray(this.value) ? true : this.connect,\n        range: this.range,\n        ...this.options\n      });\n      const slider = this.$el.noUiSlider;\n      slider.on('slide', () => {\n        let value = slider.get();\n        if (value !== this.value) {\n          this.$emit('input', value);\n        }\n      });\n    }\n  },\n  mounted() {\n    this.createSlider();\n  },\n  watch: {\n    value(newValue, oldValue) {\n      const slider = this.$el.noUiSlider;\n      const sliderValue = slider.get();\n      if (newValue !== oldValue && sliderValue !== newValue) {\n        if (Array.isArray(sliderValue) && Array.isArray(newValue)) {\n          if (\n            oldValue.length === newValue.length &&\n            oldValue.every((v, i) => v === newValue[i])\n          ) {\n            slider.set(newValue);\n          }\n        } else {\n          slider.set(newValue);\n        }\n      }\n    }\n  }\n};\n</script>\n<style></style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}