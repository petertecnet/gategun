{"ast":null,"code":"import { renderSlot as _renderSlot, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", {\n    class: _normalizeClass([\"table tablesorter\", $options.tableClass])\n  }, [_createElementVNode(\"thead\", {\n    class: _normalizeClass($props.theadClasses)\n  }, [_createElementVNode(\"tr\", null, [_renderSlot(_ctx.$slots, \"columns\", {\n    columns: $props.columns\n  }, () => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.columns, column => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: column\n    }, _toDisplayString(column), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])])], 2 /* CLASS */), _createElementVNode(\"tbody\", {\n    class: _normalizeClass($props.tbodyClasses)\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.data, (item, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_renderSlot(_ctx.$slots, \"default\", {\n      row: item,\n      index: index\n    }, () => [$options.hasValue(item, _ctx.column) ? (_openBlock(true), _createElementBlock(_Fragment, {\n      key: 0\n    }, _renderList($props.columns, (column, index) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: index\n      }, _toDisplayString($options.itemValue(item, column)), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))], 2 /* CLASS */)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","$options","tableClass","_createElementVNode","$props","theadClasses","_renderSlot","_ctx","$slots","columns","_Fragment","_renderList","column","key","_toDisplayString","tbodyClasses","data","item","index","row","hasValue","itemValue"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseTable.vue"],"sourcesContent":["<template>\n  <table class=\"table tablesorter\" :class=\"tableClass\">\n    <thead :class=\"theadClasses\">\n      <tr>\n        <slot name=\"columns\" :columns=\"columns\">\n          <th v-for=\"column in columns\" :key=\"column\">{{ column }}</th>\n        </slot>\n      </tr>\n    </thead>\n    <tbody :class=\"tbodyClasses\">\n      <tr v-for=\"(item, index) in data\" :key=\"index\">\n        <slot :row=\"item\" :index=\"index\">\n          <td\n            v-for=\"(column, index) in columns\"\n            :key=\"index\"\n            v-if=\"hasValue(item, column)\"\n          >\n            {{ itemValue(item, column) }}\n          </td>\n        </slot>\n      </tr>\n    </tbody>\n  </table>\n</template>\n<script>\nexport default {\n  name: 'base-table',\n  props: {\n    columns: {\n      type: Array,\n      default: () => [],\n      description: 'Table columns'\n    },\n    data: {\n      type: Array,\n      default: () => [],\n      description: 'Table data'\n    },\n    type: {\n      type: String, // striped | hover\n      default: '',\n      description: 'Whether table is striped or hover type'\n    },\n    theadClasses: {\n      type: String,\n      default: '',\n      description: '<thead> css classes'\n    },\n    tbodyClasses: {\n      type: String,\n      default: '',\n      description: '<tbody> css classes'\n    }\n  },\n  computed: {\n    tableClass() {\n      return this.type && `table-${this.type}`;\n    }\n  },\n  methods: {\n    hasValue(item, column) {\n      return item[column.toLowerCase()] !== 'undefined';\n    },\n    itemValue(item, column) {\n      return item[column.toLowerCase()];\n    }\n  }\n};\n</script>\n<style></style>\n"],"mappings":";;uBACEA,mBAAA,CAqBQ;IArBDC,KAAK,EAAAC,eAAA,EAAC,mBAAmB,EAASC,QAAA,CAAAC,UAAU;MACjDC,mBAAA,CAMQ;IANAJ,KAAK,EAAAC,eAAA,CAAEI,MAAA,CAAAC,YAAY;MACzBF,mBAAA,CAIK,aAHHG,WAAA,CAEOC,IAAA,CAAAC,MAAA;IAFeC,OAAO,EAAEL,MAAA,CAAAK;EAAO,GAAtC,MAEO,E,kBADLX,mBAAA,CAA6DY,SAAA,QAAAC,WAAA,CAAxCP,MAAA,CAAAK,OAAO,EAAjBG,MAAM;yBAAjBd,mBAAA,CAA6D;MAA9Be,GAAG,EAAED;IAAM,GAAAE,gBAAA,CAAKF,MAAM;uDAI3DT,mBAAA,CAYQ;IAZAJ,KAAK,EAAAC,eAAA,CAAEI,MAAA,CAAAW,YAAY;yBACzBjB,mBAAA,CAUKY,SAAA,QAAAC,WAAA,CAVuBP,MAAA,CAAAY,IAAI,GAApBC,IAAI,EAAEC,KAAK;yBAAvBpB,mBAAA,CAUK;MAV8Be,GAAG,EAAEK;IAAK,IAC3CZ,WAAA,CAQOC,IAAA,CAAAC,MAAA;MARAW,GAAG,EAAEF,IAAI;MAAGC,KAAK,EAAEA;OAA1B,MAQO,CAJGjB,QAAA,CAAAmB,QAAQ,CAACH,IAAI,EAAEV,IAAA,CAAAK,MAAM,K,kBAH7Bd,mBAAA,CAMKY,SAAA;MAAAG,GAAA;IAAA,GAAAF,WAAA,CALuBP,MAAA,CAAAK,OAAO,GAAzBG,MAAM,EAAEM,KAAK;2BADvBpB,mBAAA,CAMK;QAJFe,GAAG,EAAEK;MAAK,GAAAJ,gBAAA,CAGRb,QAAA,CAAAoB,SAAS,CAACJ,IAAI,EAAEL,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}