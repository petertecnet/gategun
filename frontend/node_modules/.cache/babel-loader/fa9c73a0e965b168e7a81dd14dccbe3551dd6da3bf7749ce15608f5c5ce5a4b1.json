{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveDynamicComponent as _resolveDynamicComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _withDirectives((_openBlock(), _createBlock(_resolveDynamicComponent($props.tag), {\n    class: _normalizeClass([{\n      show: $data.isOpen\n    }, `drop${$props.direction}`]),\n    onClick: $options.toggleDropDown\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"title-container\", {\n      isOpen: $data.isOpen\n    }, () => [(_openBlock(), _createBlock(_resolveDynamicComponent($props.titleTag), {\n      class: _normalizeClass([\"btn-rotate\", [{\n        'dropdown-toggle': $props.hasToggle\n      }, $props.titleClasses]]),\n      \"aria-expanded\": $data.isOpen,\n      \"data-toggle\": \"dropdown\"\n    }, {\n      default: _withCtx(() => [_renderSlot(_ctx.$slots, \"title\", {\n        isOpen: $data.isOpen\n      }, () => [_createElementVNode(\"i\", {\n        class: _normalizeClass($props.icon)\n      }, null, 2 /* CLASS */), _createTextVNode(\" \" + _toDisplayString($props.title), 1 /* TEXT */)], true)]),\n      _: 3 /* FORWARDED */\n    }, 8 /* PROPS */, [\"class\", \"aria-expanded\"]))], true), _createElementVNode(\"ul\", {\n      class: _normalizeClass([\"dropdown-menu\", [{\n        show: $data.isOpen\n      }, {\n        'dropdown-menu-right': $props.menuOnRight\n      }, $props.menuClasses]])\n    }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 2 /* CLASS */)]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"class\", \"onClick\"])), [[_directive_click_outside, $options.closeDropDown]]);\n}","map":{"version":3,"names":["_createBlock","_resolveDynamicComponent","$props","tag","class","_normalizeClass","show","$data","isOpen","direction","onClick","$options","toggleDropDown","_renderSlot","_ctx","$slots","titleTag","hasToggle","titleClasses","_createElementVNode","icon","_toDisplayString","title","menuOnRight","menuClasses","undefined","closeDropDown"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseDropdown.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[{ show: isOpen }, `drop${direction}`]\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"btn-rotate\"\n        :class=\"[{'dropdown-toggle': hasToggle}, titleClasses]\"\n        :aria-expanded=\"isOpen\"\n        data-toggle=\"dropdown\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i> {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down', // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown {\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"],"mappings":";;;wCACEA,YAAA,CA6BYC,wBAAA,CA5BLC,MAAA,CAAAC,GAAG;IACPC,KAAK,EAAAC,eAAA;MAAAC,IAAA,EAAWC,KAAA,CAAAC;IAAM,UAAWN,MAAA,CAAAO,SAAS;IAC1CC,OAAK,EAAEC,QAAA,CAAAC;;sBAGR,MAYO,CAZPC,WAAA,CAYOC,IAAA,CAAAC,MAAA;MAZuBP,MAAO,EAAED,KAAA,CAAAC;IAAM,GAA7C,MAYO,E,cAXLR,YAAA,CAUYC,wBAAA,CATLC,MAAA,CAAAc,QAAQ;MACbZ,KAAK,EAAAC,eAAA,EAAC,YAAY;QAAA,mBACWH,MAAA,CAAAe;MAAS,GAAGf,MAAA,CAAAgB,YAAY;MACpD,eAAa,EAAEX,KAAA,CAAAC,MAAM;MACtB,aAAW,EAAC;;wBAEZ,MAEO,CAFPK,WAAA,CAEOC,IAAA,CAAAC,MAAA;QAFaP,MAAO,EAAED,KAAA,CAAAC;MAAM,GAAnC,MAEO,CADLW,mBAAA,CAAqB;QAAjBf,KAAK,EAAAC,eAAA,CAAEH,MAAA,CAAAkB,IAAI;gDAAM,GAAC,GAAAC,gBAAA,CAAGnB,MAAA,CAAAoB,KAAK,iB;;4DAIpCH,mBAAA,CASK;MARHf,KAAK,EAAAC,eAAA,EAAC,eAAe,G;cACKE,KAAA,CAAAC;MAAM,G;+BAAqCN,MAAA,CAAAqB;MAAW,GAAYrB,MAAA,CAAAsB,WAAW,C;QAMvGX,WAAA,CAAaC,IAAA,CAAAC,MAAA,iBAAAU,SAAA,Q;;;wEAvBEd,QAAA,CAAAe,aAAa,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}