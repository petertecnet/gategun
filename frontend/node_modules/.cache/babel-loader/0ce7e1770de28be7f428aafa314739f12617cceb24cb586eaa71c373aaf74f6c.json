{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createBlock as _createBlock, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notifications\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_notification = _resolveComponent(\"notification\");\n  const _component_slide_y_up_transition = _resolveComponent(\"slide-y-up-transition\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_slide_y_up_transition, {\n    duration: $props.transitionDuration,\n    group: \"\",\n    mode: \"out-in\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.notifications, notification => {\n      return _openBlock(), _createBlock(_component_notification, _mergeProps(notification, {\n        clickHandler: notification.onClick,\n        key: notification.timestamp.getTime(),\n        onClose: $options.removeNotification\n      }), null, 16 /* FULL_PROPS */, [\"clickHandler\", \"onClose\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"duration\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_slide_y_up_transition","duration","$props","transitionDuration","group","mode","_Fragment","_renderList","$data","notifications","notification","_createBlock","_component_notification","_mergeProps","clickHandler","onClick","key","timestamp","getTime","onClose","$options","removeNotification"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\NotificationPlugin\\Notifications.vue"],"sourcesContent":["<template>\n  <div class=\"notifications\">\n    <slide-y-up-transition :duration=\"transitionDuration\"\n                             group\n                             mode=\"out-in\">\n      <notification\n        v-for=\"notification in notifications\"\n        v-bind=\"notification\"\n        :clickHandler=\"notification.onClick\"\n        :key=\"notification.timestamp.getTime()\"\n        @close=\"removeNotification\"\n      >\n      </notification>\n    </slide-y-up-transition>\n  </div>\n</template>\n<script>\n  import Notification from './Notification.vue';\n  import { SlideYUpTransition } from 'vue2-transitions';\n\n  export default {\n    components: {\n      SlideYUpTransition,\n      Notification\n    },\n    props: {\n      transitionDuration: {\n        type: Number,\n        default: 200\n      },\n      overlap: {\n        type: Boolean,\n        default: false\n      }\n    },\n    data() {\n      return {\n        notifications: this.$notifications.state\n      };\n    },\n    methods: {\n      removeNotification(timestamp) {\n        this.$notifications.removeNotification(timestamp);\n      }\n    },\n    created() {\n      this.$notifications.settings.overlap = this.overlap;\n    },\n    watch: {\n      overlap: function (newVal) {\n        this.$notifications.settings.overlap = newVal;\n      }\n    }\n  };\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAe;;;;uBAA1BC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,YAAA,CAWwBC,gCAAA;IAXAC,QAAQ,EAAEC,MAAA,CAAAC,kBAAkB;IAC3BC,KAAK,EAAL,EAAK;IACLC,IAAI,EAAC;;sBAE1B,MAAqC,E,kBADvCR,mBAAA,CAOeS,SAAA,QAAAC,WAAA,CANUC,KAAA,CAAAC,aAAa,EAA7BC,YAAY;2BADrBC,YAAA,CAOeC,uBAAA,EAPfC,WAAA,CAEUH,YAAY;QACnBI,YAAY,EAAEJ,YAAY,CAACK,OAAO;QAClCC,GAAG,EAAEN,YAAY,CAACO,SAAS,CAACC,OAAO;QACnCC,OAAK,EAAEC,QAAA,CAAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}