{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '@/services/AuthService';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorModalVisible: false,\n      errorMessage: '',\n      modalVisible: false\n    };\n  },\n  methods: {\n    submitForm() {\n      AuthService.login({\n        email: this.email,\n        password: this.password\n      }).then(response => {\n        if (response.data.success) {\n          const token = response.data.token; // Obtenha o token da resposta\n          localStorage.setItem('token', token); // Armazene o token no armazenamento local\n          localStorage.setItem('user', JSON.stringify(response.data));\n          // Login bem-sucedido, redirecionar para a página Home\n          this.$router.push('/home');\n        } else {\n          // Exibir mensagem de erro no modal\n          this.errorMessage = response.data.message;\n          this.errorModalVisible = true;\n        }\n      }).catch(error => {\n        if (error.response && error.response.data && error.response.data.message) {\n          this.showAlert(error.response.data.message);\n        } else {\n          this.showAlert('Ocorreu um erro desconhecido.');\n        }\n      });\n    },\n    redirectToRegister() {\n      this.$router.push('/register');\n    },\n    showAlert(message) {\n      Swal.fire({\n        title: 'Erro',\n        text: message,\n        icon: 'error',\n        customClass: {\n          container: 'my-modal-container',\n          title: 'my-modal-title',\n          content: 'my-modal-content',\n          confirmButton: 'my-modal-confirm-button'\n        }\n        // Mais opções de estilo aqui\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","Swal","data","email","password","errorModalVisible","errorMessage","modalVisible","methods","submitForm","login","then","response","success","token","localStorage","setItem","JSON","stringify","$router","push","message","catch","error","showAlert","redirectToRegister","fire","title","text","icon","customClass","container","content","confirmButton"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-screen\">\r\n    <div class=\"login-card\">\r\n      <div class=\"logo-container\">\r\n        <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n      </div>\r\n\r\n      <img src=\"../assets/gategun.png\" alt=\"gategun-letters\" class=\"letters\">\r\n\r\n      <form @submit.prevent=\"submitForm\">\r\n        <label class=\"label\">Email</label>\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n          </div>\r\n        </div>\r\n\r\n        <label class=\"label\">Password</label>\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n          </div>\r\n        </div>\r\n\r\n        <button class=\"image-button\" type=\"submit\">\r\n          <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n          <span class=\"button-text\">Login</span>\r\n        </button>\r\n      </form>\r\n\r\n      <div class=\"button-group\">\r\n        <button class=\"image-button\" @click=\"redirectToRegister\">\r\n          <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n          <span class=\"button-text\">Novo cadastro</span>\r\n        </button>\r\n        </div>\r\n        \r\n\r\n      <div class=\"button-group\">\r\n        <button class=\"image-button\">\r\n          <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n          <span class=\"button-text\">Esqueceu a senha?</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div></div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport AuthService from '@/services/AuthService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      errorModalVisible: false,\r\n      errorMessage: '',\r\n      modalVisible: false,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    submitForm() {\r\n      AuthService.login({\r\n        email: this.email,\r\n        password: this.password,\r\n      })\r\n        .then(response => {\r\n          if (response.data.success) {\r\n            const token = response.data.token; // Obtenha o token da resposta\r\n        localStorage.setItem('token', token); // Armazene o token no armazenamento local\r\n        localStorage.setItem('user', JSON.stringify(response.data));\r\n            // Login bem-sucedido, redirecionar para a página Home\r\n            this.$router.push('/home');\r\n          } else {\r\n            // Exibir mensagem de erro no modal\r\n            this.errorMessage = response.data.message;\r\n            this.errorModalVisible = true;\r\n          }\r\n        })\r\n        .catch(error => {\r\n          if (error.response && error.response.data && error.response.data.message) {\r\n            this.showAlert(error.response.data.message);\r\n          } else {\r\n            this.showAlert('Ocorreu um erro desconhecido.');\r\n          }\r\n        });\r\n    },\r\n\r\n    redirectToRegister() {\r\n      this.$router.push('/register');\r\n    },\r\n\r\n    showAlert(message) {\r\n      Swal.fire({\r\n        title: 'Erro',\r\n        text: message,\r\n        icon: 'error',\r\n        customClass: {\r\n          container: 'my-modal-container',\r\n          title: 'my-modal-title',\r\n          content: 'my-modal-content',\r\n          confirmButton: 'my-modal-confirm-button',\r\n        },\r\n        // Mais opções de estilo aqui\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos específicos do componente LoginView.vue */\r\n\r\n@import url('@/assets/css/gategun.css');\r\n</style>\r\n"],"mappings":";AAmDA,OAAOA,WAAU,MAAO,wBAAwB;AAChD,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,iBAAiB,EAAE,KAAK;MACxBC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXT,WAAW,CAACU,KAAK,CAAC;QAChBP,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC,EACEO,IAAI,CAACC,QAAO,IAAK;QAChB,IAAIA,QAAQ,CAACV,IAAI,CAACW,OAAO,EAAE;UACzB,MAAMC,KAAI,GAAIF,QAAQ,CAACV,IAAI,CAACY,KAAK,EAAE;UACvCC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC,EAAE;UACtCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACV,IAAI,CAAC,CAAC;UACvD;UACA,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;QAC5B,OAAO;UACL;UACA,IAAI,CAACd,YAAW,GAAIM,QAAQ,CAACV,IAAI,CAACmB,OAAO;UACzC,IAAI,CAAChB,iBAAgB,GAAI,IAAI;QAC/B;MACF,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAK;QACd,IAAIA,KAAK,CAACX,QAAO,IAAKW,KAAK,CAACX,QAAQ,CAACV,IAAG,IAAKqB,KAAK,CAACX,QAAQ,CAACV,IAAI,CAACmB,OAAO,EAAE;UACxE,IAAI,CAACG,SAAS,CAACD,KAAK,CAACX,QAAQ,CAACV,IAAI,CAACmB,OAAO,CAAC;QAC7C,OAAO;UACL,IAAI,CAACG,SAAS,CAAC,+BAA+B,CAAC;QACjD;MACF,CAAC,CAAC;IACN,CAAC;IAEDC,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IAEDI,SAASA,CAACH,OAAO,EAAE;MACjBpB,IAAI,CAACyB,IAAI,CAAC;QACRC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAEP,OAAO;QACbQ,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE;UACXC,SAAS,EAAE,oBAAoB;UAC/BJ,KAAK,EAAE,gBAAgB;UACvBK,OAAO,EAAE,kBAAkB;UAC3BC,aAAa,EAAE;QACjB;QACA;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}