{"ast":null,"code":"export default {\n  inheritAttrs: false,\n  name: \"base-input\",\n  props: {\n    required: {\n      type: Boolean,\n      description: \"Whether input is required (adds an asterix *)\"\n    },\n    group: {\n      type: Boolean,\n      description: \"Whether input is an input group (manual override in special cases)\"\n    },\n    alternative: {\n      type: Boolean,\n      description: \"Whether input is of alternative layout\"\n    },\n    label: {\n      type: String,\n      description: \"Input label (text before input)\"\n    },\n    error: {\n      type: String,\n      description: \"Input error (below input)\"\n    },\n    successMessage: {\n      type: String,\n      description: \"Input success message\",\n      default: ''\n    },\n    labelClasses: {\n      type: String,\n      description: \"Input label css classes\",\n      default: \"form-control-label\"\n    },\n    inputClasses: {\n      type: String,\n      description: \"Input css classes\"\n    },\n    inputGroupClasses: {\n      type: String,\n      description: \"Input group css classes\"\n    },\n    value: {\n      type: [String, Number],\n      description: \"Input value\"\n    },\n    type: {\n      type: String,\n      description: \"Input type\",\n      default: \"text\"\n    },\n    appendIcon: {\n      type: String,\n      description: \"Append icon (right)\"\n    },\n    prependIcon: {\n      type: String,\n      description: \"Prepend icon (left)\"\n    },\n    rules: {\n      type: [String, Array, Object],\n      description: 'Vee validate validation rules',\n      default: ''\n    },\n    name: {\n      type: String,\n      description: 'Input name (used for validation)',\n      default: ''\n    }\n  },\n  data() {\n    return {\n      focused: false\n    };\n  },\n  computed: {\n    listeners() {\n      return {\n        ...this.$listeners,\n        input: this.updateValue,\n        focus: this.onFocus,\n        blur: this.onBlur\n      };\n    },\n    slotData() {\n      return {\n        focused: this.focused,\n        error: this.error,\n        ...this.listeners\n      };\n    },\n    hasIcon() {\n      const {\n        append,\n        prepend\n      } = this.$slots;\n      return append !== undefined || prepend !== undefined || this.appendIcon !== undefined || this.prependIcon !== undefined || this.group;\n    }\n  },\n  methods: {\n    updateValue(evt) {\n      let value = evt.target.value;\n      this.$emit(\"input\", value);\n    },\n    onFocus(evt) {\n      this.focused = true;\n      this.$emit(\"focus\", evt);\n    },\n    onBlur(evt) {\n      this.focused = false;\n      this.$emit(\"blur\", evt);\n    }\n  }\n};","map":{"version":3,"names":["inheritAttrs","name","props","required","type","Boolean","description","group","alternative","label","String","error","successMessage","default","labelClasses","inputClasses","inputGroupClasses","value","Number","appendIcon","prependIcon","rules","Array","Object","data","focused","computed","listeners","$listeners","input","updateValue","focus","onFocus","blur","onBlur","slotData","hasIcon","append","prepend","$slots","undefined","methods","evt","target","$emit"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\Inputs\\BaseInput.vue"],"sourcesContent":["<template>\n  <validation-provider :rules=\"rules\" :name=\"name\" v-bind=\"$attrs\" v-slot=\"{errors, valid, invalid, validated}\">\n    <b-form-group>\n      <slot name=\"label\">\n        <label v-if=\"label\" :class=\"labelClasses\">\n          {{label}}\n        </label>\n      </slot>\n      <div :class=\"[\n       {'input-group': hasIcon},\n       {'focused': focused},\n       {'input-group-alternative': alternative},\n       {'has-label': label || $slots.label},\n       inputGroupClasses\n       ]\">\n        <div v-if=\"prependIcon || $slots.prepend\" class=\"input-group-prepend\">\n        <span class=\"input-group-text\">\n          <slot name=\"prepend\">\n            <i :class=\"prependIcon\"></i>\n          </slot>\n        </span>\n        </div>\n        <slot v-bind=\"slotData\">\n          <input\n            :value=\"value\"\n            :type=\"type\"\n            v-on=\"listeners\"\n            v-bind=\"$attrs\"\n            :valid=\"valid\"\n            :required=\"required\"\n            class=\"form-control\"\n            :class=\"[{'is-valid': valid && validated && successMessage}, {'is-invalid': invalid && validated}, inputClasses]\">\n        </slot>\n        <div v-if=\"appendIcon || $slots.append\" class=\"input-group-append\">\n          <span class=\"input-group-text\">\n              <slot name=\"append\">\n                  <i :class=\"appendIcon\"></i>\n              </slot>\n          </span>\n        </div>\n        <slot name=\"infoBlock\"></slot>\n      </div>\n      <slot name=\"success\">\n        <div class=\"valid-feedback\" v-if=\"valid && validated && successMessage\">\n          {{successMessage}}\n        </div>\n      </slot>\n      <slot name=\"error\">\n        <div v-if=\"errors[0]\" class=\"invalid-feedback\" style=\"display: block;\">\n          {{ errors[0] }}\n        </div>\n      </slot>\n    </b-form-group>\n  </validation-provider>\n</template>\n<script>\n  export default {\n    inheritAttrs: false,\n    name: \"base-input\",\n    props: {\n      required: {\n        type: Boolean,\n        description: \"Whether input is required (adds an asterix *)\"\n      },\n      group: {\n        type: Boolean,\n        description: \"Whether input is an input group (manual override in special cases)\"\n      },\n      alternative: {\n        type: Boolean,\n        description: \"Whether input is of alternative layout\"\n      },\n      label: {\n        type: String,\n        description: \"Input label (text before input)\"\n      },\n      error: {\n        type: String,\n        description: \"Input error (below input)\"\n      },\n      successMessage: {\n        type: String,\n        description: \"Input success message\",\n        default: ''\n      },\n      labelClasses: {\n        type: String,\n        description: \"Input label css classes\",\n        default: \"form-control-label\"\n      },\n      inputClasses: {\n        type: String,\n        description: \"Input css classes\"\n      },\n      inputGroupClasses: {\n        type: String,\n        description: \"Input group css classes\"\n      },\n      value: {\n        type: [String, Number],\n        description: \"Input value\"\n      },\n      type: {\n        type: String,\n        description: \"Input type\",\n        default: \"text\"\n      },\n      appendIcon: {\n        type: String,\n        description: \"Append icon (right)\"\n      },\n      prependIcon: {\n        type: String,\n        description: \"Prepend icon (left)\"\n      },\n      rules: {\n        type: [String, Array, Object],\n        description: 'Vee validate validation rules',\n        default: ''\n      },\n      name: {\n        type: String,\n        description: 'Input name (used for validation)',\n        default: ''\n      }\n    },\n    data() {\n      return {\n        focused: false\n      };\n    },\n    computed: {\n      listeners() {\n        return {\n          ...this.$listeners,\n          input: this.updateValue,\n          focus: this.onFocus,\n          blur: this.onBlur\n        };\n      },\n      slotData() {\n        return {\n          focused: this.focused,\n          error: this.error,\n          ...this.listeners\n        };\n      },\n      hasIcon() {\n        const { append, prepend } = this.$slots;\n        return (\n          append !== undefined ||\n          prepend !== undefined ||\n          this.appendIcon !== undefined ||\n          this.prependIcon !== undefined ||\n          this.group\n        );\n      }\n    },\n    methods: {\n      updateValue(evt) {\n        let value = evt.target.value;\n        this.$emit(\"input\", value);\n      },\n      onFocus(evt) {\n        this.focused = true;\n        this.$emit(\"focus\", evt);\n      },\n      onBlur(evt) {\n        this.focused = false;\n        this.$emit(\"blur\", evt);\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}