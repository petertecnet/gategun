{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '@/services/AuthService';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      errorMessage: '',\n      modalVisible: false\n    };\n  },\n  methods: {\n    submitForm() {\n      AuthService.checkAuth().then(() => {\n        AuthService.login(this.email, this.password).then(response => {\n          if (response.success) {\n            // Login bem-sucedido, redirecionar para a página Home\n            this.$router.push('/home');\n          } else {\n            // Exibir mensagem de erro no modal\n            this.errorMessage = response.message;\n            this.modalVisible = true;\n          }\n        }).catch(error => {\n          if (error.response && error.response.data && error.response.data.message) {\n            this.showAlert(error.response.data.message);\n          } else {\n            this.showAlert('Ocorreu um erro desconhecido.');\n          }\n        });\n      }).catch(error => {\n        // Usuário não autenticado, exibir mensagem de erro ou redirecionar para a página de login\n        this.errorMessage = error.message;\n        this.modalVisible = true;\n      });\n    },\n    redirectToRegister() {\n      this.$router.push('/register');\n    },\n    showAlert(message) {\n      Swal.fire({\n        title: 'Erro',\n        text: message,\n        icon: 'error',\n        customClass: {\n          container: 'my-modal-container',\n          title: 'my-modal-title',\n          content: 'my-modal-content',\n          confirmButton: 'my-modal-confirm-button'\n        }\n        // Mais opções de estilo aqui\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","Swal","data","email","password","errorMessage","modalVisible","methods","submitForm","checkAuth","then","login","response","success","$router","push","message","catch","error","showAlert","redirectToRegister","fire","title","text","icon","customClass","container","content","confirmButton"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\views\\LoginView.vue"],"sourcesContent":["<template>\r\n    <div class=\"login-screen\">\r\n      <div class=\"login-card\">\r\n        <div class=\"logo-container\">\r\n          <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n        </div>\r\n  \r\n        <img src=\"../assets/gategun.png\" alt=\"gategun-letters\" class=\"letters\">\r\n  \r\n        <form @submit.prevent=\"submitForm\">\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n              <label>Email</label>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"input-container\">\r\n              <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n              <label>Senha</label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button class=\"image-button\" type=\"submit\">\r\n              <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n              <span class=\"button-text\">Login</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n  \r\n        <div class=\"button-group\">\r\n          <button class=\"image-button\" @click=\"redirectToRegister\">\r\n            <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n            <span class=\"button-text\">Novo cadastro</span>\r\n          </button>\r\n        </div>\r\n  \r\n        <div class=\"button-group\">\r\n          <button class=\"image-button\">\r\n            <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n            <span class=\"button-text\">Esqueceu a senha?</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n  \r\n        <!-- Modal -->\r\n        <div v-if=\"modalVisible\" class=\"modal\">\r\n          <div class=\"modal-content\">\r\n            <!-- Conteúdo do modal -->\r\n            <h3>Erro</h3>\r\n            <p>{{ errorMessage }}</p>\r\n  \r\n            <!-- Botão para fechar o modal -->\r\n            <div class=\"button-group\">\r\n              <button class=\"image-button\" @click=\"redirectToRegister\">\r\n                <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n                <span class=\"button-text\">Novo cadastro</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  <script>\r\n  import AuthService from '@/services/AuthService';\r\n  import Swal from 'sweetalert2';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        email: '',\r\n        password: '',\r\n        errorMessage: '',\r\n        modalVisible: false,\r\n      };\r\n    },\r\n    methods: {\r\n      submitForm() {\r\n        AuthService.checkAuth()\r\n          .then(() => {\r\n            AuthService.login(this.email, this.password)\r\n              .then(response => {\r\n                if (response.success) {\r\n                  // Login bem-sucedido, redirecionar para a página Home\r\n                  this.$router.push('/home');\r\n                } else {\r\n                  // Exibir mensagem de erro no modal\r\n                  this.errorMessage = response.message;\r\n                  this.modalVisible = true;\r\n                }\r\n              })\r\n              .catch(error => {\r\n                if (error.response && error.response.data && error.response.data.message) {\r\n                  this.showAlert(error.response.data.message);\r\n                } else {\r\n                  this.showAlert('Ocorreu um erro desconhecido.');\r\n                }\r\n              });\r\n          })\r\n          .catch(error => {\r\n            // Usuário não autenticado, exibir mensagem de erro ou redirecionar para a página de login\r\n            this.errorMessage = error.message;\r\n            this.modalVisible = true;\r\n          });\r\n      },\r\n      redirectToRegister() {\r\n        this.$router.push('/register');\r\n      },\r\n      showAlert(message) {\r\n        Swal.fire({\r\n          title: 'Erro',\r\n          text: message,\r\n          icon: 'error',\r\n          customClass: {\r\n            container: 'my-modal-container',\r\n            title: 'my-modal-title',\r\n            content: 'my-modal-content',\r\n            confirmButton: 'my-modal-confirm-button',\r\n          },\r\n          // Mais opções de estilo aqui\r\n        });\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Estilos específicos do componente LoginView.vue */\r\n  \r\n  @import url('@/assets/css/gategun.css');\r\n  </style>\r\n  "],"mappings":";AAkEE,OAAOA,WAAU,MAAO,wBAAwB;AAChD,OAAOC,IAAG,MAAO,aAAa;AAE9B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE,EAAE;MAChBC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACXR,WAAW,CAACS,SAAS,CAAC,EACnBC,IAAI,CAAC,MAAM;QACVV,WAAW,CAACW,KAAK,CAAC,IAAI,CAACR,KAAK,EAAE,IAAI,CAACC,QAAQ,EACxCM,IAAI,CAACE,QAAO,IAAK;UAChB,IAAIA,QAAQ,CAACC,OAAO,EAAE;YACpB;YACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,OAAO,CAAC;UAC5B,OAAO;YACL;YACA,IAAI,CAACV,YAAW,GAAIO,QAAQ,CAACI,OAAO;YACpC,IAAI,CAACV,YAAW,GAAI,IAAI;UAC1B;QACF,CAAC,EACAW,KAAK,CAACC,KAAI,IAAK;UACd,IAAIA,KAAK,CAACN,QAAO,IAAKM,KAAK,CAACN,QAAQ,CAACV,IAAG,IAAKgB,KAAK,CAACN,QAAQ,CAACV,IAAI,CAACc,OAAO,EAAE;YACxE,IAAI,CAACG,SAAS,CAACD,KAAK,CAACN,QAAQ,CAACV,IAAI,CAACc,OAAO,CAAC;UAC7C,OAAO;YACL,IAAI,CAACG,SAAS,CAAC,+BAA+B,CAAC;UACjD;QACF,CAAC,CAAC;MACN,CAAC,EACAF,KAAK,CAACC,KAAI,IAAK;QACd;QACA,IAAI,CAACb,YAAW,GAAIa,KAAK,CAACF,OAAO;QACjC,IAAI,CAACV,YAAW,GAAI,IAAI;MAC1B,CAAC,CAAC;IACN,CAAC;IACDc,kBAAkBA,CAAA,EAAG;MACnB,IAAI,CAACN,OAAO,CAACC,IAAI,CAAC,WAAW,CAAC;IAChC,CAAC;IACDI,SAASA,CAACH,OAAO,EAAE;MACjBf,IAAI,CAACoB,IAAI,CAAC;QACRC,KAAK,EAAE,MAAM;QACbC,IAAI,EAAEP,OAAO;QACbQ,IAAI,EAAE,OAAO;QACbC,WAAW,EAAE;UACXC,SAAS,EAAE,oBAAoB;UAC/BJ,KAAK,EAAE,gBAAgB;UACvBK,OAAO,EAAE,kBAAkB;UAC3BC,aAAa,EAAE;QACjB;QACA;MACF,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}