{"ast":null,"code":"import { renderSlot as _renderSlot, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, normalizeClass as _normalizeClass, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"fas fa-spinner fa-spin\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_button = _resolveComponent(\"b-button\");\n  return _openBlock(), _createBlock(_component_b_button, {\n    type: $props.nativeType,\n    disabled: $props.disabled || $props.loading,\n    onClick: $options.handleClick,\n    class: _normalizeClass([\"base-button\", [{\n      'rounded-circle': $props.round\n    }, {\n      'btn-wd': $props.wide\n    }, {\n      'btn-icon btn-fab': $props.icon\n    }, {\n      'btn-link': $props.link\n    }, {\n      disabled: $props.disabled\n    }]]),\n    variant: !$props.outline ? $props.type : `outline-${$props.type}`,\n    size: $props.size,\n    block: $props.block\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"loading\", {}, () => [$props.loading ? (_openBlock(), _createElementBlock(\"i\", _hoisted_1)) : _createCommentVNode(\"v-if\", true)]), _renderSlot(_ctx.$slots, \"default\")]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"type\", \"disabled\", \"onClick\", \"variant\", \"size\", \"block\", \"class\"]);\n}","map":{"version":3,"names":["class","_createBlock","_component_b_button","type","$props","nativeType","disabled","loading","onClick","$options","handleClick","_normalizeClass","round","wide","icon","link","variant","outline","size","block","_renderSlot","_ctx","$slots","_createElementBlock","_hoisted_1"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseButton.vue"],"sourcesContent":["<template>\n  <b-button\n    :type=\"nativeType\"\n    :disabled=\"disabled || loading\"\n    @click=\"handleClick\"\n    class=\"base-button\"\n    :variant=\"!outline ? type : `outline-${type}`\"\n    :size=\"size\"\n    :block=\"block\"\n    :class=\"[\n      { 'rounded-circle': round },\n      { 'btn-wd': wide },\n      { 'btn-icon btn-fab': icon },\n      { 'btn-link': link },\n      { disabled: disabled }\n    ]\"\n  >\n    <slot name=\"loading\">\n      <i v-if=\"loading\" class=\"fas fa-spinner fa-spin\"></i>\n    </slot>\n    <slot></slot>\n  </b-button>\n</template>\n<script>\nexport default {\n  name: 'base-button',\n  props: {\n    round: Boolean,\n    icon: Boolean,\n    block: Boolean,\n    loading: Boolean,\n    wide: Boolean,\n    disabled: Boolean,\n    type: {\n      type: String,\n      default: 'default',\n      description: 'Button type (primary|secondary|danger etc)'\n    },\n    nativeType: {\n      type: String,\n      default: 'button',\n      description: 'Button native type (e.g button, input etc)'\n    },\n    size: {\n      type: String,\n      default: '',\n      description: 'Button size (sm|lg)'\n    },\n    outline: {\n      type: Boolean,\n      description: 'Whether button is outlined (only border has color)'\n    },\n    link: {\n      type: Boolean,\n      description: 'Whether button is a link (no borders or background)'\n    }\n  },\n  methods: {\n    handleClick(evt) {\n      this.$emit('click', evt);\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n  .base-button {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n\n    i {\n      padding: 0 3px;\n    }\n  }\n</style>\n"],"mappings":";;;EAkBwBA,KAAK,EAAC;;;;uBAjB5BC,YAAA,CAoBWC,mBAAA;IAnBRC,IAAI,EAAEC,MAAA,CAAAC,UAAU;IAChBC,QAAQ,EAAEF,MAAA,CAAAE,QAAQ,IAAIF,MAAA,CAAAG,OAAO;IAC7BC,OAAK,EAAEC,QAAA,CAAAC,WAAW;IACnBV,KAAK,EAAAW,eAAA,EAAC,aAAa,G;wBAIiBP,MAAA,CAAAQ;IAAK,G;gBAAsBR,MAAA,CAAAS;IAAI,G;0BAAgCT,MAAA,CAAAU;IAAI,G;kBAAwBV,MAAA,CAAAW;IAAI,G;gBAAsBX,MAAA,CAAAE;IAAQ,E;IAHhKU,OAAO,GAAGZ,MAAA,CAAAa,OAAO,GAAGb,MAAA,CAAAD,IAAI,cAAcC,MAAA,CAAAD,IAAI;IAC1Ce,IAAI,EAAEd,MAAA,CAAAc,IAAI;IACVC,KAAK,EAAEf,MAAA,CAAAe;;sBASR,MAEO,CAFPC,WAAA,CAEOC,IAAA,CAAAC,MAAA,iBAFP,MAEO,CADIlB,MAAA,CAAAG,OAAO,I,cAAhBgB,mBAAA,CAAqD,KAArDC,UAAqD,K,qCAEvDJ,WAAA,CAAaC,IAAA,CAAAC,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}