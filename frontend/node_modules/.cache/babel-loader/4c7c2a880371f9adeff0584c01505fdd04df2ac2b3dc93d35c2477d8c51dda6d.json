{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router/index.js';\nconst login = (email, password) => {\n  const data = {\n    email: email,\n    password: password\n  };\n  return axios.post('http://127.0.0.1:8000/api/login', data).then(response => {\n    if (response.data.success) {\n      // Login bem-sucedido, redirecionar para a página Home\n      router.push('/home');\n    } else {\n      // Exibir mensagem de erro no console\n      console.error(response.data.message);\n    }\n    return response.data;\n  }).catch(error => {\n    // Tratamento de erro\n    throw new Error('Ocorreu um erro ao fazer login');\n  });\n};\nconst register = (name, email, password) => {\n  const data = {\n    name: name,\n    email: email,\n    password: password\n  };\n  return axios.post('http://127.0.0.1:8000/api/register', data).then(response => {\n    // Lógica de manipulação da resposta do servidor após o registro\n    return response.data;\n  }).catch(error => {\n    // Tratamento de erro\n    throw new Error('Ocorreu um erro ao registrar');\n  });\n};\nconst checkAuth = () => {\n  return axios.get('http://127.0.0.1:8000/api/check-auth').then(response => {\n    const authenticated = response.data.authenticated;\n    if (authenticated) {\n      // Usuário autenticado, prosseguir para as rotas protegidas\n      return true;\n    } else {\n      // Usuário não autenticado, redirecionar para a tela de login\n      throw new Error('Usuário não autenticado');\n    }\n  }).catch(error => {\n    // Erro ao verificar a autenticação, redirecionar para a tela de login\n    throw new Error('Erro ao verificar autenticação');\n  });\n};\nexport default {\n  login,\n  register,\n  checkAuth\n};","map":{"version":3,"names":["axios","router","login","email","password","data","post","then","response","success","push","console","error","message","catch","Error","register","name","checkAuth","get","authenticated"],"sources":["C:/xampp/htdocs/gategun/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\r\nimport router from '../router/index.js';\r\n\r\nconst login = (email, password) => {\r\n  const data = {\r\n    email: email,\r\n    password: password\r\n  };\r\n\r\n  return axios.post('http://127.0.0.1:8000/api/login', data)\r\n    .then(response => {\r\n      if (response.data.success) {\r\n        // Login bem-sucedido, redirecionar para a página Home\r\n        router.push('/home');\r\n      } else {\r\n        // Exibir mensagem de erro no console\r\n        console.error(response.data.message);\r\n      }\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      // Tratamento de erro\r\n      throw new Error('Ocorreu um erro ao fazer login');\r\n    });\r\n};\r\n\r\nconst register = (name, email, password) => {\r\n  const data = {\r\n    name: name,\r\n    email: email,\r\n    password: password,\r\n  };\r\n\r\n  return axios.post('http://127.0.0.1:8000/api/register', data)\r\n    .then(response => {\r\n      // Lógica de manipulação da resposta do servidor após o registro\r\n      return response.data;\r\n    })\r\n    .catch(error => {\r\n      // Tratamento de erro\r\n      throw new Error('Ocorreu um erro ao registrar');\r\n    });\r\n};\r\n\r\nconst checkAuth = () => {\r\n  return axios.get('http://127.0.0.1:8000/api/check-auth')\r\n    .then(response => {\r\n      const authenticated = response.data.authenticated;\r\n      if (authenticated) {\r\n        // Usuário autenticado, prosseguir para as rotas protegidas\r\n        return true;\r\n      } else {\r\n        // Usuário não autenticado, redirecionar para a tela de login\r\n        throw new Error('Usuário não autenticado');\r\n      }\r\n    })\r\n    .catch(error => {\r\n      // Erro ao verificar a autenticação, redirecionar para a tela de login\r\n      throw new Error('Erro ao verificar autenticação');\r\n    });\r\n};\r\n\r\nexport default {\r\n  login,\r\n  register,\r\n  checkAuth\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EACjC,MAAMC,IAAI,GAAG;IACXF,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC;EAED,OAAOJ,KAAK,CAACM,IAAI,CAAC,iCAAiC,EAAED,IAAI,CAAC,CACvDE,IAAI,CAACC,QAAQ,IAAI;IAChB,IAAIA,QAAQ,CAACH,IAAI,CAACI,OAAO,EAAE;MACzB;MACAR,MAAM,CAACS,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC,MAAM;MACL;MACAC,OAAO,CAACC,KAAK,CAACJ,QAAQ,CAACH,IAAI,CAACQ,OAAO,CAAC;IACtC;IACA,OAAOL,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,CACDS,KAAK,CAACF,KAAK,IAAI;IACd;IACA,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;EACnD,CAAC,CAAC;AACN,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEd,KAAK,EAAEC,QAAQ,KAAK;EAC1C,MAAMC,IAAI,GAAG;IACXY,IAAI,EAAEA,IAAI;IACVd,KAAK,EAAEA,KAAK;IACZC,QAAQ,EAAEA;EACZ,CAAC;EAED,OAAOJ,KAAK,CAACM,IAAI,CAAC,oCAAoC,EAAED,IAAI,CAAC,CAC1DE,IAAI,CAACC,QAAQ,IAAI;IAChB;IACA,OAAOA,QAAQ,CAACH,IAAI;EACtB,CAAC,CAAC,CACDS,KAAK,CAACF,KAAK,IAAI;IACd;IACA,MAAM,IAAIG,KAAK,CAAC,8BAA8B,CAAC;EACjD,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;EACtB,OAAOlB,KAAK,CAACmB,GAAG,CAAC,sCAAsC,CAAC,CACrDZ,IAAI,CAACC,QAAQ,IAAI;IAChB,MAAMY,aAAa,GAAGZ,QAAQ,CAACH,IAAI,CAACe,aAAa;IACjD,IAAIA,aAAa,EAAE;MACjB;MACA,OAAO,IAAI;IACb,CAAC,MAAM;MACL;MACA,MAAM,IAAIL,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,CACDD,KAAK,CAACF,KAAK,IAAI;IACd;IACA,MAAM,IAAIG,KAAK,CAAC,gCAAgC,CAAC;EACnD,CAAC,CAAC;AACN,CAAC;AAED,eAAe;EACbb,KAAK;EACLc,QAAQ;EACRE;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}