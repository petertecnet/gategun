{"ast":null,"code":"export default {\n  name: \"base-checkbox\",\n  model: {\n    prop: \"checked\"\n  },\n  props: {\n    checked: {\n      type: [Array, Boolean],\n      description: \"Whether checkbox is checked\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether checkbox is disabled\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether checkbox is inline\"\n    },\n    inputClasses: {\n      type: [String, Object, Array],\n      description: \"Checkbox input classes\"\n    },\n    type: {\n      type: String,\n      description: 'Checkbox type (e.g info, danger etc)'\n    }\n  },\n  data() {\n    return {\n      cbId: \"\",\n      touched: false\n    };\n  },\n  computed: {\n    model: {\n      get() {\n        return this.checked;\n      },\n      set(check) {\n        if (!this.touched) {\n          this.touched = true;\n        }\n        this.$emit(\"input\", check);\n      }\n    },\n    inlineClass() {\n      if (this.inline) {\n        return `form-check-inline`;\n      }\n    }\n  },\n  created() {\n    this.cbId = Math.random().toString(16).slice(2);\n  }\n};","map":{"version":3,"names":["name","model","prop","props","checked","type","Array","Boolean","description","disabled","inline","inputClasses","String","Object","data","cbId","touched","computed","get","set","check","$emit","inlineClass","created","Math","random","toString","slice"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\Inputs\\BaseCheckbox.vue"],"sourcesContent":["<template>\n  <div class=\"custom-control custom-checkbox\"\n       :class=\"[\n       {disabled: disabled},\n       {[`custom-checkbox-${type}`]: type},inlineClass]\">\n    <input :id=\"cbId\"\n           class=\"custom-control-input\"\n           :class=\"inputClasses\"\n           type=\"checkbox\"\n           :disabled=\"disabled\"\n           v-model=\"model\"/>\n    <label :for=\"cbId\" class=\"custom-control-label\">\n      <slot>\n        <span v-if=\"inline\">&nbsp;</span>\n      </slot>\n    </label>\n  </div>\n</template>\n<script>\n  export default {\n    name: \"base-checkbox\",\n    model: {\n      prop: \"checked\"\n    },\n    props: {\n      checked: {\n        type: [Array, Boolean],\n        description: \"Whether checkbox is checked\"\n      },\n      disabled: {\n        type: Boolean,\n        description: \"Whether checkbox is disabled\"\n      },\n      inline: {\n        type: Boolean,\n        description: \"Whether checkbox is inline\"\n      },\n      inputClasses: {\n        type: [String, Object, Array],\n        description: \"Checkbox input classes\"\n      },\n      type: {\n        type: String,\n        description: 'Checkbox type (e.g info, danger etc)'\n      }\n    },\n    data() {\n      return {\n        cbId: \"\",\n        touched: false\n      };\n    },\n    computed: {\n      model: {\n        get() {\n          return this.checked;\n        },\n        set(check) {\n          if (!this.touched) {\n            this.touched = true;\n          }\n          this.$emit(\"input\", check);\n        }\n      },\n      inlineClass() {\n        if (this.inline) {\n          return `form-check-inline`;\n        }\n      }\n    },\n    created() {\n      this.cbId = Math.random()\n        .toString(16)\n        .slice(2);\n    }\n  };\n</script>\n"],"mappings":"AAmBE,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,IAAI,EAAE;EACR,CAAC;EACDC,KAAK,EAAE;IACLC,OAAO,EAAE;MACPC,IAAI,EAAE,CAACC,KAAK,EAAEC,OAAO,CAAC;MACtBC,WAAW,EAAE;IACf,CAAC;IACDC,QAAQ,EAAE;MACRJ,IAAI,EAAEE,OAAO;MACbC,WAAW,EAAE;IACf,CAAC;IACDE,MAAM,EAAE;MACNL,IAAI,EAAEE,OAAO;MACbC,WAAW,EAAE;IACf,CAAC;IACDG,YAAY,EAAE;MACZN,IAAI,EAAE,CAACO,MAAM,EAAEC,MAAM,EAAEP,KAAK,CAAC;MAC7BE,WAAW,EAAE;IACf,CAAC;IACDH,IAAI,EAAE;MACJA,IAAI,EAAEO,MAAM;MACZJ,WAAW,EAAE;IACf;EACF,CAAC;EACDM,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRhB,KAAK,EAAE;MACLiB,GAAGA,CAAA,EAAG;QACJ,OAAO,IAAI,CAACd,OAAO;MACrB,CAAC;MACDe,GAAGA,CAACC,KAAK,EAAE;QACT,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE;UACjB,IAAI,CAACA,OAAM,GAAI,IAAI;QACrB;QACA,IAAI,CAACK,KAAK,CAAC,OAAO,EAAED,KAAK,CAAC;MAC5B;IACF,CAAC;IACDE,WAAWA,CAAA,EAAG;MACZ,IAAI,IAAI,CAACZ,MAAM,EAAE;QACf,OAAQ,mBAAkB;MAC5B;IACF;EACF,CAAC;EACDa,OAAOA,CAAA,EAAG;IACR,IAAI,CAACR,IAAG,GAAIS,IAAI,CAACC,MAAM,CAAC,EACrBC,QAAQ,CAAC,EAAE,EACXC,KAAK,CAAC,CAAC,CAAC;EACb;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}