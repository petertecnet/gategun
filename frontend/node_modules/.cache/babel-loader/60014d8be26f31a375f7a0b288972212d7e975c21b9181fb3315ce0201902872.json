{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description: 'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description: 'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return ['', 'dark', 'success', 'danger', 'warning', 'white', 'primary', 'light', 'info', 'vue'].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [{\n        'navbar-transparent': this.transparent\n      }, {\n        [`navbar-expand-${this.expand}`]: this.expand\n      }];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","show","type","Boolean","default","description","transparent","expand","String","menuClasses","Object","Array","containerClasses","validator","value","includes","model","prop","event","computed","classes","color","position","push","hasMenu","$slots","methods","toggleMenu","$emit","closeMenu"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\Navbar\\BaseNav.vue"],"sourcesContent":["<template>\n  <b-navbar toggleable :class=\"classes\">\n    <div :class=\"containerClasses\">\n      <slot name=\"brand\"></slot>\n\n      <slot name=\"toggle-button\">\n        <button\n          class=\"navbar-toggler collapsed\"\n          v-if=\"hasMenu\"\n          type=\"button\"\n          @click=\"toggleMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n        </button>\n      </slot>\n\n      <b-navbar-toggle\n        target=\"nav-text-collapse\"\n        @click.stop=\"toggleMenu\">\n      </b-navbar-toggle>\n\n      <b-collapse\n        is-nav\n        id=\"nav-text-collapse\"\n        class=\"navbar-custom-collapse collapse\"\n        :class=\"menuClasses\"\n        :visible=\"show\"\n        v-click-outside=\"closeMenu\">\n        <slot :close-menu=\"closeMenu\"></slot>\n      </b-collapse>\n    </div>\n  </b-navbar>\n</template>\n<script>\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description:\n        'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description:\n        'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return [\n          '',\n          'dark',\n          'success',\n          'danger',\n          'warning',\n          'white',\n          'primary',\n          'light',\n          'info',\n          'vue'\n        ].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { 'navbar-transparent': this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand }\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style></style>\n"],"mappings":";AAsCA,eAAe;EACbA,IAAI,EAAE,UAAU;EAChBC,KAAK,EAAE;IACLC,IAAI,EAAE;MACJC,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE,KAAK;MACdC,WAAW,EACT;IACJ,CAAC;IACDC,WAAW,EAAE;MACXJ,IAAI,EAAEC,OAAO;MACbC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE;IACf,CAAC;IACDE,MAAM,EAAE;MACNL,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE,IAAI;MACbC,WAAW,EAAE;IACf,CAAC;IACDI,WAAW,EAAE;MACXP,IAAI,EAAE,CAACM,MAAM,EAAEE,MAAM,EAAEC,KAAK,CAAC;MAC7BP,OAAO,EAAE,EAAE;MACXC,WAAW,EACT;IACJ,CAAC;IACDO,gBAAgB,EAAE;MAChBV,IAAI,EAAE,CAACM,MAAM,EAAEE,MAAM,EAAEC,KAAK,CAAC;MAC7BP,OAAO,EAAE,WAAW;MACpBC,WAAW,EACT;IACJ,CAAC;IACDH,IAAI,EAAE;MACJA,IAAI,EAAEM,MAAM;MACZJ,OAAO,EAAE,EAAE;MACXS,SAASA,CAACC,KAAK,EAAE;QACf,OAAO,CACL,EAAE,EACF,MAAM,EACN,SAAS,EACT,QAAQ,EACR,SAAS,EACT,OAAO,EACP,SAAS,EACT,OAAO,EACP,MAAM,EACN,KAAI,CACL,CAACC,QAAQ,CAACD,KAAK,CAAC;MACnB,CAAC;MACDT,WAAW,EAAE;IACf;EACF,CAAC;EACDW,KAAK,EAAE;IACLC,IAAI,EAAE,MAAM;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,OAAOA,CAAA,EAAG;MACR,IAAIC,KAAI,GAAK,MAAK,IAAI,CAACnB,IAAK,EAAC;MAC7B,IAAIkB,OAAM,GAAI,CACZ;QAAE,oBAAoB,EAAE,IAAI,CAACd;MAAY,CAAC,EAC1C;QAAE,CAAE,iBAAgB,IAAI,CAACC,MAAO,EAAC,GAAG,IAAI,CAACA;MAAO,EACjD;MACD,IAAI,IAAI,CAACe,QAAQ,EAAE;QACjBF,OAAO,CAACG,IAAI,CAAE,UAAS,IAAI,CAACD,QAAS,EAAC,CAAC;MACzC;MACA,IAAI,CAAC,IAAI,CAAChB,WAAW,EAAE;QACrBc,OAAO,CAACG,IAAI,CAACF,KAAK,CAAC;MACrB;MACA,OAAOD,OAAO;IAChB,CAAC;IACDI,OAAOA,CAAA,EAAG;MACR,OAAO,IAAI,CAACC,MAAM,CAACrB,OAAO;IAC5B;EACF,CAAC;EACDsB,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC3B,IAAI,CAAC;IAClC,CAAC;IACD4B,SAASA,CAAA,EAAG;MACV,IAAI,CAACD,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;IAC7B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}