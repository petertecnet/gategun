{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"header-body\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_container = _resolveComponent(\"b-container\");\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"header\", {\n      [`bg-${$props.type}`]: $props.type\n    }])\n  }, [_createVNode(_component_b_container, {\n    fluid: \"\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_renderSlot(_ctx.$slots, \"default\")])]),\n    _: 3 /* FORWARDED */\n  })], 2 /* CLASS */);\n}","map":{"version":3,"names":["class","_createElementBlock","_normalizeClass","$props","type","_createVNode","_component_b_container","fluid","_createElementVNode","_hoisted_1","_renderSlot","_ctx","$slots"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseHeader.vue"],"sourcesContent":["<template>\n  <div class=\"header\" :class=\"{[`bg-${type}`]: type}\">\n     <b-container fluid>\n      <div class=\"header-body\">\n        <slot></slot>\n      </div>\n     </b-container>\n  </div>\n</template>\n<script>\n  export default {\n    name: 'base-header',\n    props: {\n      type: {\n        type: String,\n        default: 'success',\n        description: 'Header background type'\n      }\n    }\n  }\n</script>\n<style>\n</style>\n"],"mappings":";;EAGWA,KAAK,EAAC;AAAa;;;uBAF5BC,mBAAA,CAMM;IANDD,KAAK,EAAAE,eAAA,EAAC,QAAQ;MAAA,OAAiBC,MAAA,CAAAC,IAAI,KAAKD,MAAA,CAAAC;IAAI;MAC9CC,YAAA,CAIcC,sBAAA;IAJDC,KAAK,EAAL;EAAK;sBACjB,MAEM,CAFNC,mBAAA,CAEM,OAFNC,UAEM,GADJC,WAAA,CAAaC,IAAA,CAAAC,MAAA,a"},"metadata":{},"sourceType":"module","externalDependencies":[]}