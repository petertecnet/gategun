{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, normalizeStyle as _normalizeStyle, withCtx as _withCtx } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"progress-label\"\n};\nconst _hoisted_3 = {\n  class: \"progress-percentage\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_progress_bar = _resolveComponent(\"b-progress-bar\");\n  const _component_b_progress = _resolveComponent(\"b-progress\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.showLabel ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass(`progress-${$props.type}`)\n  }, [_createElementVNode(\"div\", _hoisted_2, [_renderSlot(_ctx.$slots, \"label\", {}, () => [_createElementVNode(\"span\", null, _toDisplayString($props.label), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_3, [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createElementVNode(\"span\", null, _toDisplayString($props.value) + \"%\", 1 /* TEXT */)])])], 2 /* CLASS */)) : _createCommentVNode(\"v-if\", true), _createVNode(_component_b_progress, {\n    size: $props.size,\n    class: _normalizeClass([$props.progressClasses]),\n    style: _normalizeStyle(`height: ${$props.height}px`)\n  }, {\n    default: _withCtx(() => [_createVNode(_component_b_progress_bar, {\n      class: _normalizeClass($options.computedClasses),\n      value: $props.value\n    }, null, 8 /* PROPS */, [\"class\", \"value\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"size\", \"class\", \"style\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","$props","showLabel","_normalizeClass","type","_createElementVNode","_hoisted_2","_renderSlot","_ctx","$slots","_toDisplayString","label","_hoisted_3","value","_createVNode","_component_b_progress","size","progressClasses","style","_normalizeStyle","height","_component_b_progress_bar","$options","computedClasses"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseProgress.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div :class=\"`progress-${type}`\" v-if=\"showLabel\">\n      <div class=\"progress-label\">\n        <slot name=\"label\">\n          <span>{{label}}</span>\n        </slot>\n      </div>\n      <div class=\"progress-percentage\">\n        <slot>\n          <span>{{value}}%</span>\n        </slot>\n      </div>\n    </div>\n    <b-progress\n      :size=\"size\"\n      :class=\"[progressClasses]\"\n      :style=\"`height: ${height}px`\">\n      <b-progress-bar :class=\"computedClasses\" :value=\"value\"></b-progress-bar>\n    </b-progress>\n  </div>\n</template>\n<script>\n  export default {\n    name: \"base-progress\",\n    props: {\n      striped: {\n        type: Boolean,\n        description: \"Whether progress is striped\"\n      },\n      animated: {\n        type: Boolean,\n        description:\n          \"Whether progress is animated (works only with `striped` prop together)\"\n      },\n      label: {\n        type: String,\n        description: \"Progress label (shown on the left above progress)\"\n      },\n      height: {\n        type: Number,\n        default: 3,\n        description: \"Progress line height\"\n      },\n      type: {\n        type: String,\n        default: \"default\",\n        description: \"Progress type (e.g danger, primary etc)\"\n      },\n      showLabel: {\n        type: Boolean,\n        default: false\n      },\n      progressClasses: {\n        type: [Array, String],\n        default: '',\n        description: 'Progress css classes'\n      },\n      size: {\n        type: String,\n        default: ''\n      },\n      value: {\n        type: Number,\n        default: 0,\n        validator: value => {\n          return value >= 0 && value <= 100;\n        },\n        description: \"Progress value\"\n      }\n    },\n    computed: {\n      computedClasses() {\n        return [\n          { \"progress-bar-striped\": this.striped },\n          { \"progress-bar-animated\": this.animated },\n          { [`bg-${this.type}`]: this.type }\n        ];\n      }\n    }\n  };\n</script>\n<style>\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAS;;EAEXA,KAAK,EAAC;AAAgB;;EAKtBA,KAAK,EAAC;AAAqB;;;;uBAPpCC,mBAAA,CAmBM,OAnBNC,UAmBM,GAlBmCC,MAAA,CAAAC,SAAS,I,cAAhDH,mBAAA,CAWM;;IAXAD,KAAK,EAAAK,eAAA,aAAcF,MAAA,CAAAG,IAAI;MAC3BC,mBAAA,CAIM,OAJNC,UAIM,GAHJC,WAAA,CAEOC,IAAA,CAAAC,MAAA,eAFP,MAEO,CADLJ,mBAAA,CAAsB,cAAAK,gBAAA,CAAdT,MAAA,CAAAU,KAAK,iB,KAGjBN,mBAAA,CAIM,OAJNO,UAIM,GAHJL,WAAA,CAEOC,IAAA,CAAAC,MAAA,iBAFP,MAEO,CADLJ,mBAAA,CAAuB,cAAAK,gBAAA,CAAfT,MAAA,CAAAY,KAAK,IAAE,GAAC,gB,2DAItBC,YAAA,CAKaC,qBAAA;IAJVC,IAAI,EAAEf,MAAA,CAAAe,IAAI;IACVlB,KAAK,EAAAK,eAAA,EAAGF,MAAA,CAAAgB,eAAe;IACvBC,KAAK,EAAAC,eAAA,YAAalB,MAAA,CAAAmB,MAAM;;sBACzB,MAAyE,CAAzEN,YAAA,CAAyEO,yBAAA;MAAxDvB,KAAK,EAAAK,eAAA,CAAEmB,QAAA,CAAAC,eAAe;MAAGV,KAAK,EAAEZ,MAAA,CAAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}