{"ast":null,"code":"export default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down',\n      // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};","map":{"version":3,"names":["name","props","tag","type","String","default","description","titleTag","title","direction","icon","titleClasses","Object","Array","menuClasses","menuOnRight","Boolean","hasToggle","data","isOpen","methods","toggleDropDown","$emit","closeDropDown"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\BaseDropdown.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[{ show: isOpen }, `drop${direction}`]\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title-container\" :is-open=\"isOpen\">\n      <component\n        :is=\"titleTag\"\n        class=\"btn-rotate\"\n        :class=\"[{'dropdown-toggle': hasToggle}, titleClasses]\"\n        :aria-expanded=\"isOpen\"\n        data-toggle=\"dropdown\"\n      >\n        <slot name=\"title\" :is-open=\"isOpen\">\n          <i :class=\"icon\"></i> {{ title }}\n        </slot>\n      </component>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { show: isOpen },\n        { 'dropdown-menu-right': menuOnRight },\n        menuClasses\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'base-dropdown',\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n      description: 'Dropdown html tag (e.g div, ul etc)'\n    },\n    titleTag: {\n      type: String,\n      default: 'button',\n      description: 'Dropdown title (toggle) html tag'\n    },\n    title: {\n      type: String,\n      description: 'Dropdown title'\n    },\n    direction: {\n      type: String,\n      default: 'down', // up | down\n      description: 'Dropdown menu direction (up|down)'\n    },\n    icon: {\n      type: String,\n      description: 'Dropdown icon'\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: 'Title css classes'\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: 'Menu css classes'\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: 'Whether menu should appear on the right'\n    },\n    hasToggle: {\n      type: Boolean,\n      description: 'Whether dropdown has arrow icon shown',\n      default: true\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.dropdown {\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"],"mappings":"AAiCA,eAAe;EACbA,IAAI,EAAE,eAAe;EACrBC,KAAK,EAAE;IACLC,GAAG,EAAE;MACHC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,KAAK;MACdC,WAAW,EAAE;IACf,CAAC;IACDC,QAAQ,EAAE;MACRJ,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,QAAQ;MACjBC,WAAW,EAAE;IACf,CAAC;IACDE,KAAK,EAAE;MACLL,IAAI,EAAEC,MAAM;MACZE,WAAW,EAAE;IACf,CAAC;IACDG,SAAS,EAAE;MACTN,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAE,MAAM;MAAE;MACjBC,WAAW,EAAE;IACf,CAAC;IACDI,IAAI,EAAE;MACJP,IAAI,EAAEC,MAAM;MACZE,WAAW,EAAE;IACf,CAAC;IACDK,YAAY,EAAE;MACZR,IAAI,EAAE,CAACC,MAAM,EAAEQ,MAAM,EAAEC,KAAK,CAAC;MAC7BP,WAAW,EAAE;IACf,CAAC;IACDQ,WAAW,EAAE;MACXX,IAAI,EAAE,CAACC,MAAM,EAAEQ,MAAM,CAAC;MACtBN,WAAW,EAAE;IACf,CAAC;IACDS,WAAW,EAAE;MACXZ,IAAI,EAAEa,OAAO;MACbV,WAAW,EAAE;IACf,CAAC;IACDW,SAAS,EAAE;MACTd,IAAI,EAAEa,OAAO;MACbV,WAAW,EAAE,uCAAuC;MACpDD,OAAO,EAAE;IACX;EACF,CAAC;EACDa,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACF,MAAK,GAAI,CAAC,IAAI,CAACA,MAAM;MAC1B,IAAI,CAACG,KAAK,CAAC,QAAQ,EAAE,IAAI,CAACH,MAAM,CAAC;IACnC,CAAC;IACDI,aAAaA,CAAA,EAAG;MACd,IAAI,CAACJ,MAAK,GAAI,KAAK;MACnB,IAAI,CAACG,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC;IAC7B;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}