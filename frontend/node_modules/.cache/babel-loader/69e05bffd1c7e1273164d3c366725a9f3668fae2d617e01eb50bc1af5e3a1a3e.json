{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport router from '../router/index.js';\nconst AuthService = {\n  login(email, password) {\n    console.log(email);\n    const data = {\n      email: email,\n      password: password\n    };\n    return axios.post('http://127.0.0.1:8000/api/login', data).then(response => {\n      if (response.data.success) {\n        // Login bem-sucedido, redirecionar para a página Home\n        router.push('/home');\n      } else {\n        // Exibir mensagem de erro no console\n        console.error(response.data.message);\n      }\n      return response.data;\n    }).catch(error => {\n      // Tratamento de erro\n      throw error;\n    });\n  },\n  register(name, email, password) {\n    const data = {\n      name: name,\n      email: email,\n      password: password\n    };\n    console.log(name);\n    return axios.post('http://127.0.0.1:8000/api/register', data).then(response => {\n      // Lógica de manipulação da resposta do servidor após o registro\n      return response.data;\n    }).catch(error => {\n      // Tratamento de erro\n      throw error;\n    });\n  }\n};\n// Função para verificar a autenticação do usuário\nfunction checkAuth() {\n  // Faça uma requisição ao servidor para verificar se o usuário está autenticado\n  return axios.get('/api/check-auth').then(response => {\n    return response.data.isAuthenticated;\n  }).catch(error => {\n    console.error('Erro ao verificar autenticação:', error);\n    return false;\n  });\n}\nexport default AuthService;\nexport { checkAuth };","map":{"version":3,"names":["axios","router","AuthService","login","email","password","console","log","data","post","then","response","success","push","error","message","catch","register","name","checkAuth","get","isAuthenticated"],"sources":["C:/xampp/htdocs/gategun/frontend/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\r\nimport router from '../router/index.js';\r\n\r\n\r\nconst AuthService = {\r\n  login(email, password) {\r\n    \r\n  console.log(email);\r\n    const data = {\r\n      email: email,\r\n      password: password\r\n    };\r\n    return axios.post('http://127.0.0.1:8000/api/login', data)\r\n      .then(response => {\r\n        if (response.data.success) {\r\n          // Login bem-sucedido, redirecionar para a página Home\r\n          router.push('/home');\r\n        } else {\r\n          // Exibir mensagem de erro no console\r\n          console.error(response.data.message);\r\n        }\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        // Tratamento de erro\r\n        throw error;\r\n      });\r\n  },\r\n  register(name, email, password) {\r\n    const data = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n    };\r\n  console.log(name);\r\n    return axios.post('http://127.0.0.1:8000/api/register', data)\r\n      .then(response => {\r\n        // Lógica de manipulação da resposta do servidor após o registro\r\n        return response.data;\r\n      })\r\n      .catch(error => {\r\n        // Tratamento de erro\r\n        throw error;\r\n      });\r\n  }\r\n};\r\n// Função para verificar a autenticação do usuário\r\nfunction checkAuth() {\r\n  // Faça uma requisição ao servidor para verificar se o usuário está autenticado\r\n  return axios.get('/api/check-auth').then(response => {\r\n    return response.data.isAuthenticated;\r\n  }).catch(error => {\r\n    console.error('Erro ao verificar autenticação:', error);\r\n    return false;\r\n  });\r\n}\r\nexport default AuthService;\r\n\r\nexport { checkAuth };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAGvC,MAAMC,WAAW,GAAG;EAClBC,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;IAEvBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;IAChB,MAAMI,IAAI,GAAG;MACXJ,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IACD,OAAOL,KAAK,CAACS,IAAI,CAAC,iCAAiC,EAAED,IAAI,CAAC,CACvDE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIA,QAAQ,CAACH,IAAI,CAACI,OAAO,EAAE;QACzB;QACAX,MAAM,CAACY,IAAI,CAAC,OAAO,CAAC;MACtB,CAAC,MAAM;QACL;QACAP,OAAO,CAACQ,KAAK,CAACH,QAAQ,CAACH,IAAI,CAACO,OAAO,CAAC;MACtC;MACA,OAAOJ,QAAQ,CAACH,IAAI;IACtB,CAAC,CAAC,CACDQ,KAAK,CAACF,KAAK,IAAI;MACd;MACA,MAAMA,KAAK;IACb,CAAC,CAAC;EACN,CAAC;EACDG,QAAQA,CAACC,IAAI,EAAEd,KAAK,EAAEC,QAAQ,EAAE;IAC9B,MAAMG,IAAI,GAAG;MACXU,IAAI,EAAEA,IAAI;MACVd,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACZ,CAAC;IACHC,OAAO,CAACC,GAAG,CAACW,IAAI,CAAC;IACf,OAAOlB,KAAK,CAACS,IAAI,CAAC,oCAAoC,EAAED,IAAI,CAAC,CAC1DE,IAAI,CAACC,QAAQ,IAAI;MAChB;MACA,OAAOA,QAAQ,CAACH,IAAI;IACtB,CAAC,CAAC,CACDQ,KAAK,CAACF,KAAK,IAAI;MACd;MACA,MAAMA,KAAK;IACb,CAAC,CAAC;EACN;AACF,CAAC;AACD;AACA,SAASK,SAASA,CAAA,EAAG;EACnB;EACA,OAAOnB,KAAK,CAACoB,GAAG,CAAC,iBAAiB,CAAC,CAACV,IAAI,CAACC,QAAQ,IAAI;IACnD,OAAOA,QAAQ,CAACH,IAAI,CAACa,eAAe;EACtC,CAAC,CAAC,CAACL,KAAK,CAACF,KAAK,IAAI;IAChBR,OAAO,CAACQ,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO,KAAK;EACd,CAAC,CAAC;AACJ;AACA,eAAeZ,WAAW;AAE1B,SAASiB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}