{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport AuthService from '@/services/AuthService';\nimport Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      name: '',\n      email: '',\n      password: '',\n      modalVisible: false,\n      errorMessage: ''\n    };\n  },\n  methods: {\n    submitForm() {\n      const userData = {\n        name: this.name,\n        email: this.email,\n        password: this.password\n      };\n      AuthService.register(userData).then(response => {\n        // Verifique a resposta do servidor e tome a ação apropriada\n        // por exemplo, exibir mensagem de sucesso ou erro\n        this.showAlert2(response.data.message);\n\n        // Autenticar o usuário automaticamente\n        AuthService.login(userData).then(response => {\n          if (response.data.success) {\n            // Login bem-sucedido, redirecionar para a página Home\n            this.$router.push('/home');\n          } else {\n            // Exibir mensagem de erro no modal\n            this.errorMessage = response.data.message;\n            this.errorModalVisible = true;\n          }\n          // Verifique a resposta do servidor e tome a ação apropriada\n          // por exemplo, armazenar o token de autenticação\n          // e redirecionar o usuário para a página inicial\n          this.$router.push({\n            name: 'Home'\n          });\n        }).catch(error => {\n          // Trate o erro aqui\n          if (error.response && error.response.data && error.response.data.message) {\n            this.showAlert(error.response.data.message);\n          } else {\n            this.showAlert('Ocorreu um erro desconhecido durante o login automático.');\n          }\n        });\n      }).catch(error => {\n        // Trate o erro aqui\n        if (error.response && error.response.data && error.response.data.message) {\n          this.showAlert(error.response.data.message);\n        } else {\n          this.showAlert('Ocorreu um erro desconhecido durante o registro.');\n        }\n      });\n    },\n    redirectToLogin() {\n      this.$router.push('/');\n    },\n    closeModal() {\n      this.modalVisible = false;\n    },\n    showAlert(message) {\n      Swal.fire({\n        title: 'Erro',\n        text: message,\n        icon: 'error',\n        customClass: {\n          container: 'my-modal-container',\n          title: 'my-modal-title',\n          content: 'my-modal-content',\n          confirmButton: 'my-modal-confirm-button'\n        }\n        // Mais opções de estilo aqui\n      });\n    },\n\n    showAlert2(message) {\n      Swal.fire({\n        title: 'Sucesso',\n        text: message,\n        icon: 'success',\n        customClass: {\n          container: 'my-modal-container',\n          title: 'my-modal-title',\n          content: 'my-modal-content',\n          confirmButton: 'my-modal-confirm-button'\n        }\n        // Mais opções de estilo aqui\n      });\n    }\n  }\n};","map":{"version":3,"names":["AuthService","Swal","data","name","email","password","modalVisible","errorMessage","methods","submitForm","userData","register","then","response","showAlert2","message","login","success","$router","push","errorModalVisible","catch","error","showAlert","redirectToLogin","closeModal","fire","title","text","icon","customClass","container","content","confirmButton"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\views\\RegisterView.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-screen\">\r\n    <div class=\"login-card\">\r\n      <div class=\"logo-container\">\r\n        <img src=\"../assets/logo.png\" alt=\"Logo\" class=\"logo\">\r\n      </div>\r\n      \r\n      <img src=\"../assets/gategun.png\" alt=\"gategun-letters\" class=\"letters\">\r\n      \r\n      <form @submit.prevent=\"submitForm\">\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <input type=\"name\" id=\"name\" v-model=\"name\" required>\r\n            <label>Name</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n            <label>Email</label>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <div class=\"input-container\">\r\n            <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n            <label>Senha</label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <button class=\"image-button\" type=\"submit\">\r\n            <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n            <span class=\"button-text\">Concluir</span>\r\n          </button>\r\n        </div>\r\n      </form>\r\n      \r\n      <div class=\"button-group\">\r\n        <button class=\"image-button\" @click=\"redirectToLogin\">\r\n          <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n          <span class=\"button-text\">Jà tenho cadastro</span>\r\n        </button>\r\n      </div>\r\n      \r\n      <div class=\"button-group\">\r\n        <button class=\"image-button\">\r\n          <img src=\"../assets/button.png\" alt=\"Imagem\">\r\n          <span class=\"button-text\">Esqueceu a senha?</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <div>\r\n\r\n      <!-- Modal -->\r\n      <div v-if=\"modalVisible\" class=\"modal\">\r\n        <div class=\"modal-content\">\r\n          <!-- Conteúdo do modal -->\r\n          <h3>Erro</h3>\r\n          <p>{{ errorMessage }}</p>\r\n\r\n          <!-- Botão para fechar o modal -->\r\n          <button @click=\"redirectToLogin\">Fechar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>import AuthService from '@/services/AuthService';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      modalVisible: false,\r\n      errorMessage: '',\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    submitForm() {\r\n  const userData = {\r\n    name: this.name,\r\n    email: this.email,\r\n    password: this.password,\r\n  };\r\n\r\n  AuthService.register(userData)\r\n    .then(response => {\r\n      // Verifique a resposta do servidor e tome a ação apropriada\r\n      // por exemplo, exibir mensagem de sucesso ou erro\r\n      this.showAlert2(response.data.message);\r\n\r\n      // Autenticar o usuário automaticamente\r\n      AuthService.login(userData)\r\n        .then(response => {\r\n          if (response.data.success) {\r\n            // Login bem-sucedido, redirecionar para a página Home\r\n            this.$router.push('/home');\r\n          } else {\r\n            // Exibir mensagem de erro no modal\r\n            this.errorMessage = response.data.message;\r\n            this.errorModalVisible = true;\r\n          }\r\n          // Verifique a resposta do servidor e tome a ação apropriada\r\n          // por exemplo, armazenar o token de autenticação\r\n          // e redirecionar o usuário para a página inicial\r\n          this.$router.push({ name: 'Home' });\r\n        })\r\n        .catch(error => {\r\n          // Trate o erro aqui\r\n          if (error.response && error.response.data && error.response.data.message) {\r\n            this.showAlert(error.response.data.message);\r\n          } else {\r\n            this.showAlert('Ocorreu um erro desconhecido durante o login automático.');\r\n          }\r\n        });\r\n    })\r\n    .catch(error => {\r\n      // Trate o erro aqui\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        this.showAlert(error.response.data.message);\r\n      } else {\r\n        this.showAlert('Ocorreu um erro desconhecido durante o registro.');\r\n      }\r\n    });\r\n},\r\n\r\n\r\n    redirectToLogin() {\r\n      this.$router.push('/');\r\n    },\r\n\r\n    closeModal() {\r\n      this.modalVisible = false;\r\n    },\r\n\r\n    showAlert(message) {\r\n      Swal.fire({\r\n        title: 'Erro',\r\n        text: message,\r\n        icon: 'error',\r\n        customClass: {\r\n          container: 'my-modal-container',\r\n          title: 'my-modal-title',\r\n          content: 'my-modal-content',\r\n          confirmButton: 'my-modal-confirm-button',\r\n        },\r\n        // Mais opções de estilo aqui\r\n      });\r\n    },showAlert2(message) {\r\n      Swal.fire({\r\n        title: 'Sucesso',\r\n        text: message,\r\n        icon: 'success',\r\n        customClass: {\r\n          container: 'my-modal-container',\r\n          title: 'my-modal-title',\r\n          content: 'my-modal-content',\r\n          confirmButton: 'my-modal-confirm-button',\r\n        },\r\n        // Mais opções de estilo aqui\r\n      });\r\n    },\r\n  }\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos específicos do componente LoginView.vue */\r\n\r\n@import url('@/assets/css/gategun.css');\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}