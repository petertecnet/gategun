{"ast":null,"code":"import { renderSlot as _renderSlot, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withModifiers as _withModifiers, createVNode as _createVNode, normalizeClass as _normalizeClass, resolveDirective as _resolveDirective, withCtx as _withCtx, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-toggler-bar navbar-kebab\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-toggler-bar navbar-kebab\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"navbar-toggler-bar navbar-kebab\"\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = [_hoisted_1, _hoisted_2, _hoisted_3];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_navbar_toggle = _resolveComponent(\"b-navbar-toggle\");\n  const _component_b_collapse = _resolveComponent(\"b-collapse\");\n  const _component_b_navbar = _resolveComponent(\"b-navbar\");\n  const _directive_click_outside = _resolveDirective(\"click-outside\");\n  return _openBlock(), _createBlock(_component_b_navbar, {\n    toggleable: \"\",\n    class: _normalizeClass($options.classes)\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      class: _normalizeClass($props.containerClasses)\n    }, [_renderSlot(_ctx.$slots, \"brand\"), _renderSlot(_ctx.$slots, \"toggle-button\", {}, () => [$options.hasMenu ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      class: \"navbar-toggler collapsed\",\n      type: \"button\",\n      onClick: _cache[0] || (_cache[0] = (...args) => $options.toggleMenu && $options.toggleMenu(...args)),\n      \"aria-expanded\": \"false\",\n      \"aria-label\": \"Toggle navigation\"\n    }, _hoisted_4)) : _createCommentVNode(\"v-if\", true)]), _createVNode(_component_b_navbar_toggle, {\n      target: \"nav-text-collapse\",\n      onClick: _withModifiers($options.toggleMenu, [\"stop\"])\n    }, null, 8 /* PROPS */, [\"onClick\"]), _withDirectives((_openBlock(), _createBlock(_component_b_collapse, {\n      \"is-nav\": \"\",\n      id: \"nav-text-collapse\",\n      class: _normalizeClass([\"navbar-custom-collapse collapse\", $props.menuClasses]),\n      visible: $props.show\n    }, {\n      default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {\n        closeMenu: $options.closeMenu\n      })]),\n      _: 3 /* FORWARDED */\n    }, 8 /* PROPS */, [\"class\", \"visible\"])), [[_directive_click_outside, $options.closeMenu]])], 2 /* CLASS */)]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"class\"]);\n}","map":{"version":3,"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3","_createBlock","_component_b_navbar","toggleable","_normalizeClass","$options","classes","$props","containerClasses","_renderSlot","_ctx","$slots","hasMenu","_createElementBlock","type","onClick","_cache","args","toggleMenu","_createVNode","_component_b_navbar_toggle","target","_withModifiers","_component_b_collapse","id","menuClasses","visible","show","closeMenu"],"sources":["C:\\xampp\\htdocs\\gategun\\frontend\\src\\components\\Navbar\\BaseNav.vue"],"sourcesContent":["<template>\n  <b-navbar toggleable :class=\"classes\">\n    <div :class=\"containerClasses\">\n      <slot name=\"brand\"></slot>\n\n      <slot name=\"toggle-button\">\n        <button\n          class=\"navbar-toggler collapsed\"\n          v-if=\"hasMenu\"\n          type=\"button\"\n          @click=\"toggleMenu\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n          <span class=\"navbar-toggler-bar navbar-kebab\"></span>\n        </button>\n      </slot>\n\n      <b-navbar-toggle\n        target=\"nav-text-collapse\"\n        @click.stop=\"toggleMenu\">\n      </b-navbar-toggle>\n\n      <b-collapse\n        is-nav\n        id=\"nav-text-collapse\"\n        class=\"navbar-custom-collapse collapse\"\n        :class=\"menuClasses\"\n        :visible=\"show\"\n        v-click-outside=\"closeMenu\">\n        <slot :close-menu=\"closeMenu\"></slot>\n      </b-collapse>\n    </div>\n  </b-navbar>\n</template>\n<script>\nexport default {\n  name: 'base-nav',\n  props: {\n    show: {\n      type: Boolean,\n      default: false,\n      description:\n        'Whether navbar menu is shown (valid for viewports < specified by `expand` prop)'\n    },\n    transparent: {\n      type: Boolean,\n      default: false,\n      description: 'Whether navbar is transparent'\n    },\n    expand: {\n      type: String,\n      default: 'lg',\n      description: 'Breakpoint where nav should expand'\n    },\n    menuClasses: {\n      type: [String, Object, Array],\n      default: '',\n      description:\n        'Navbar menu (items) classes. Can be used to align menu items to the right/left'\n    },\n    containerClasses: {\n      type: [String, Object, Array],\n      default: 'container',\n      description:\n        'Container classes. Can be used to control container classes (contains both navbar brand and menu items)'\n    },\n    type: {\n      type: String,\n      default: '',\n      validator(value) {\n        return [\n          '',\n          'dark',\n          'success',\n          'danger',\n          'warning',\n          'white',\n          'primary',\n          'light',\n          'info',\n          'vue'\n        ].includes(value);\n      },\n      description: 'Navbar color type'\n    }\n  },\n  model: {\n    prop: 'show',\n    event: 'change'\n  },\n  computed: {\n    classes() {\n      let color = `bg-${this.type}`;\n      let classes = [\n        { 'navbar-transparent': this.transparent },\n        { [`navbar-expand-${this.expand}`]: this.expand }\n      ];\n      if (this.position) {\n        classes.push(`navbar-${this.position}`);\n      }\n      if (!this.transparent) {\n        classes.push(color);\n      }\n      return classes;\n    },\n    hasMenu() {\n      return this.$slots.default;\n    }\n  },\n  methods: {\n    toggleMenu() {\n      this.$emit('change', !this.show);\n    },\n    closeMenu() {\n      this.$emit('change', false);\n    }\n  }\n};\n</script>\n<style></style>\n"],"mappings":";gCAcUA,mBAAA,CAAqD;EAA/CC,KAAK,EAAC;AAAiC;gCAC7CD,mBAAA,CAAqD;EAA/CC,KAAK,EAAC;AAAiC;gCAC7CD,mBAAA,CAAqD;EAA/CC,KAAK,EAAC;AAAiC;oBAF7CC,UAAqD,EACrDC,UAAqD,EACrDC,UAAqD,C;;;;;;uBAf7DC,YAAA,CAkCWC,mBAAA;IAlCDC,UAAU,EAAV,EAAU;IAAEN,KAAK,EAAAO,eAAA,CAAEC,QAAA,CAAAC,OAAO;;sBAClC,MAgCM,CAhCNV,mBAAA,CAgCM;MAhCAC,KAAK,EAAAO,eAAA,CAAEG,MAAA,CAAAC,gBAAgB;QAC3BC,WAAA,CAA0BC,IAAA,CAAAC,MAAA,YAE1BF,WAAA,CAaOC,IAAA,CAAAC,MAAA,uBAbP,MAaO,CAVGN,QAAA,CAAAO,OAAO,I,cAFfC,mBAAA,CAWS;;MAVPhB,KAAK,EAAC,0BAA0B;MAEhCiB,IAAI,EAAC,QAAQ;MACZC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEZ,QAAA,CAAAa,UAAA,IAAAb,QAAA,CAAAa,UAAA,IAAAD,IAAA,CAAU;MAClB,eAAa,EAAC,OAAO;MACrB,YAAU,EAAC;2DAQfE,YAAA,CAGkBC,0BAAA;MAFhBC,MAAM,EAAC,mBAAmB;MACzBN,OAAK,EAAAO,cAAA,CAAOjB,QAAA,CAAAa,UAAU;yEAGzBjB,YAAA,CAQasB,qBAAA;MAPX,QAAM,EAAN,EAAM;MACNC,EAAE,EAAC,mBAAmB;MACtB3B,KAAK,EAAAO,eAAA,EAAC,iCAAiC,EAC/BG,MAAA,CAAAkB,WAAW;MAClBC,OAAO,EAAEnB,MAAA,CAAAoB;;wBAEV,MAAqC,CAArClB,WAAA,CAAqCC,IAAA,CAAAC,MAAA;QAA9BiB,SAAU,EAAEvB,QAAA,CAAAuB;MAAS,G;;0EADXvB,QAAA,CAAAuB,SAAS,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}