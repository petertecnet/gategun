{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport { checkAuth } from '../service/AuthService';\nimport LoginView from '@/views/LoginView.vue';\nimport RegisterView from '@/views/RegisterView.vue';\nimport HomeView from '@/views/HomeView.vue';\n\n// Função para verificar a autenticação antes de acessar uma rota protegida\nasync function requireAuth(to, from, next) {\n  const isAuthenticated = await checkAuth(); // Verificar se o usuário está autenticado\n  if (isAuthenticated) {\n    next(); // O usuário está autenticado, permita o acesso à rota\n  } else {\n    next('/'); // Redirecione para a página de login se o usuário não estiver autenticado\n  }\n}\n\nconst routes = [{\n  path: '/',\n  component: LoginView\n}, {\n  path: '/register',\n  component: RegisterView\n}, {\n  path: '/home',\n  component: HomeView,\n  beforeEnter: requireAuth\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","checkAuth","LoginView","RegisterView","HomeView","requireAuth","to","from","next","isAuthenticated","routes","path","component","beforeEnter","router","history"],"sources":["C:/xampp/htdocs/gategun/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\r\nimport { checkAuth } from '../service/AuthService';\r\nimport LoginView from '@/views/LoginView.vue';\r\nimport RegisterView from '@/views/RegisterView.vue';\r\nimport HomeView from '@/views/HomeView.vue';\r\n\r\n\r\n// Função para verificar a autenticação antes de acessar uma rota protegida\r\nasync function requireAuth(to, from, next) {\r\n    const isAuthenticated = await checkAuth(); // Verificar se o usuário está autenticado\r\n    if (isAuthenticated) {\r\n      next(); // O usuário está autenticado, permita o acesso à rota\r\n    } else {\r\n      next('/'); // Redirecione para a página de login se o usuário não estiver autenticado\r\n    }\r\n  }\r\n  \r\nconst routes = [\r\n    { path: '/', component: LoginView },    \r\n    { path: '/register', component: RegisterView },\r\n    { path: '/home', component: HomeView,  beforeEnter: requireAuth}\r\n];\r\n\r\nconst router = createRouter({\r\n  history: createWebHistory(),\r\n  routes\r\n});\r\n\r\nexport default router;\r\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,SAASC,SAAS,QAAQ,wBAAwB;AAClD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,QAAQ,MAAM,sBAAsB;;AAG3C;AACA,eAAeC,WAAWA,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,EAAE;EACvC,MAAMC,eAAe,GAAG,MAAMR,SAAS,CAAC,CAAC,CAAC,CAAC;EAC3C,IAAIQ,eAAe,EAAE;IACnBD,IAAI,CAAC,CAAC,CAAC,CAAC;EACV,CAAC,MAAM;IACLA,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EACb;AACF;;AAEF,MAAME,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEV;AAAU,CAAC,EACnC;EAAES,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAET;AAAa,CAAC,EAC9C;EAAEQ,IAAI,EAAE,OAAO;EAAEC,SAAS,EAAER,QAAQ;EAAGS,WAAW,EAAER;AAAW,CAAC,CACnE;AAED,MAAMS,MAAM,GAAGf,YAAY,CAAC;EAC1BgB,OAAO,EAAEf,gBAAgB,CAAC,CAAC;EAC3BU;AACF,CAAC,CAAC;AAEF,eAAeI,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}